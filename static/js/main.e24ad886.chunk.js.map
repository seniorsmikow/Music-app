{"version":3,"sources":["forms/SearchForm/SearchForm.module.scss","pages/NewReleasesPage/NewReleases.module.scss","components/MusicAlbumCard/MusicAlbumCard.module.scss","components/HeaderMenu/HeaderMenu.module.scss","components/ArtistAlbums/ArtistAlbums.module.scss","components/Buttons/ScroollToTop/ScrollToTop.module.scss","components/Buttons/ScrollToBottom/ScrollToBottom.module.scss","App.module.scss","forms/SearchUsers/SearchUsers.module.scss","pages/ProfilePage/ProfilePage.module.scss","api/spotifyAPI.ts","credentials/credentials.ts","api/api.ts","redux/music_search.ts","forms/SearchForm/MusicSearchForm.tsx","img/user_without_photo.png","redux/app_reducer.ts","api/authAPI.ts","types/auth_types.ts","redux/auth_reducer.ts","redux/profile_reducer.ts","components/HeaderMenu/HeaderMenu.tsx","redux/selectors/appSelectors.ts","components/Notification/Notification.tsx","components/Header/Header.tsx","redux/selectors/authSelectors.ts","components/Tabs/TabPanel/TabPanel.tsx","redux/selectors/musicSelectors.ts","components/LoaderTwo/LoaderTwo.tsx","forms/LoginRegForm/LoginRegForm.tsx","api/usersAPI.ts","redux/users_reducer.ts","components/UserCard/UserCard.tsx","components/Pagination/Pagination.tsx","forms/SearchUsers/SearchUsers.tsx","components/Loader/Loader.tsx","pages/UsersPage/UsersPage.tsx","components/GhostAnimation/GhostAnimation.tsx","redux/genres_reducer.ts","img/adele.jpg","img/dua_lipa.jpg","img/kanye_west.jpg","img/hans.jpg","img/metallica.jpg","components/Slider/Slider.tsx","pages/FriendsPage/FriendsPage.tsx","components/NewReleaseCard/NewReleaseCard.tsx","redux/music_reducer.ts","redux/album_reducer.ts","components/MusicAlbumCard/MusicAlbumCard.tsx","img/album.jpg","components/ArtistAlbums/ArtistAlbums.tsx","helpers/time.ts","components/MusicTrack/MusicTrack.tsx","components/AppRouter/routes.ts","components/AppRouter/constants.ts","pages/LoginRegPage/LoginRegPage.tsx","pages/HomePage/HomePage.tsx","pages/ProfilePage/ProfilePage.tsx","pages/NewReleasesPage/NewReleasesPage.tsx","pages/MusicFindPage/MusicFindPage.tsx","pages/ArtistPage/ArtistPage.tsx","pages/AlbumPage/AlbumPage.tsx","components/AppRouter/AppRouter.tsx","components/Buttons/ScroollToTop/ScrollToTop.tsx","components/Buttons/ScrollToBottom/ScrollToBottom.tsx","App.tsx","reportWebVitals.ts","redux/artist_reducer.ts","redux/root_reducer.ts","index.tsx","pages/AlbumPage/AlbumPage.module.scss","components/Pagination/Pagination.module.scss","forms/LoginRegForm/Login.module.scss","components/Header/Header.module.scss","components/Loader/Loader.module.scss","components/GhostAnimation/WaitGhost.module.scss","pages/MusicFindPage/MusicFindPage.module.scss","components/Notification/Notification.module.scss","pages/HomePage/HomePage.module.scss","pages/ArtistPage/ArtistPage.module.scss","components/LoaderTwo/LoaderTwo.module.scss","pages/LoginRegPage/LoginPage.module.scss","pages/UsersPage/UsersPage.module.scss","components/UserCard/UserCard.module.scss","components/Slider/Slider.module.scss","pages/FriendsPage/FriendsPage.module.scss","components/MusicTrack/MusicTrack.module.scss"],"names":["module","exports","credentials","ClientId","ClientSecret","baseURL","musicTokenAPI","axios","headers","btoa","data","method","then","token","access_token","localStorage","setItem","$authHost","create","interceptors","request","use","config","authorization","getItem","ResultCodeForCapcthaEnum","musicAPI","country","limit","get","res","albums","query","type","artistId","offset","albumId","initialState","error","isLoading","artists","tracks","actions","loading","response","getMusicSearchResponse","dispatch","a","items","searchReducer","state","action","MusicSearchForm","useState","search","setSearch","setType","inputValue","setInputValue","useDispatch","history","useHistory","className","styles","root","placeholder","value","onChange","e","event","currentTarget","handleChangeInput","name","target","search__icon","onClick","path","push","find","header__search_icon","fontSize","toggleOpen","notificationCount","notificationText","formType","isOpen","count","text","toogleOpenModalWindow","getNotification","appReducer","ApiKey","instance","withCredentials","ResultCodesEnum","authAPI","email","password","rememberMe","captcha","post","delete","securityAPI","MusicEnum","userId","messages","resultCode","login","isAuth","registrationMessage","isSpotifyAuth","payload","message","auth","load","getCaptcha","url","HeaderMenu","useSelector","authReducer","ownUserId","userLogout","header__menu","header__menu_close","to","getNotificationsCount","getNotificationsText","getFormType","Notification","setIsOpen","handleOpen","clear","notification__root","notification__count","notification__info_wrapper","notification__close","length","map","note","notification__info_text","Header","profile","profileReducer","header__container","header__wrapper","header__left_block","header__logo","header__search_input","header__note_icon","header__user_logout","photos","small","src","alt","userWithoutPhoto","isLoad","likedArtistNames","likedAlbumsNames","likedTracks","id","DELETE_MUSIC_ENUM","setIdOfLikedMusic","ARTIST","ALBUM","TRACK","filter","el","isUserAuth","getUserId","fetchError","getRegMessage","getLoading","TabPanel","props","children","index","other","role","hidden","aria-labelledby","Box","sx","p","Typography","fetchNewReleases","musicReducer","newReleasesData","fetchArtistData","artistData","getAlbums","createSelector","albumsData","reduce","album","set","Map","values","getAlbum","albumReducer","albumData","getAlbumTitle","albumTitle","getAlbumImage","albumImage","albumsSearchResponse","artistsSearchResponse","tracksSearchResponse","getArtistsNames","getLikedAlbums","getLikedTracks","LoaderTwo","loader__root","loader__block_one","loader__block_two","loader__block_three","SignupSchema","Yup","shape","required","min","max","LoginRegForm","captchaUrl","login__form_wrapper","initialValues","validationSchema","onSubmit","Success","Captcha","Error","loginOrRegistration","resetForm","errors","touched","form__inputs","email__errors","autoComplete","password__errors","form__remember_me","remember_me_text","htmlFor","remember__me_checkbox","usersAPI","page","term","friend","users","totalCount","showUserCount","currentPage","follow","getAllUsers","changeCurrentPage","UserCard","status","photo","userCard__wrapper","user__card_icon","user__card_name","user__card_status","Pagination","totalUsersCount","usersReducer","usersPortionShow","pages","setPages","lastPage","Math","ceil","useEffect","selectPage","reverse","pagination__root","pagination__select","pagination__list","disabled","pagination__list_active","SearchUsers","Loader","loader__wrapper","loader__animation_block","loader__block_four","loader__block_five","UsersPage","React","memo","showUsersCount","pageNumber","searchTerm","usersPage__wrapper","users__page_text","users__page_grid","Grid","container","spacing","user","item","xs","sm","md","lg","xl","users__card_wrapper","uniqueUrlName","followed","large","GhostAnimation","main","ghost__body","ghost__hands","ghost__face","ghost__eyes","ghost_mouth","ghost_feet","genres","genresReducer","Slider","imgArray","ImgOne","ImgTwo","ImgThree","ImgFour","ImgFive","posX","setPosX","isFinishNext","setIsFinishNext","isFinishPrev","setIsFinishPrev","classes","elem","slider__img_wrapper","style","transform","prev__button","next__button","FriendsPage","NewReleaseCard","album_type","release_date","total_tracks","image","artistsNames","Card","display","backgroundColor","justifyContent","margin","marginTop","color","width","padding","flexDirection","CardContent","flex","component","variant","artist","CardMedia","categories","releases","getNewReleases","title","MusicAlbumCard","img","albumType","releaseDate","albumImg","showAlbum","album__card_root","album__card_image","album__card_title","ArtistAlbums","artist__albums_root","artist__albums_wrapper","images","showTrackTime","ms","minutes","floor","seconds","toFixed","MusicTrack","track_number","duration_ms","isLiked","setIsLiked","includes","music__track_active","music__track_root","music__track_name","music__track_handle","authRoutes","Component","publicRoutes","loginError","setLoginError","alert","changeFormType","toggleFormType","login__page_root","login_page_error","registration__link","userAuth","home__page_root","home__page_slider","home__page_main","home__page_text","home__button_news","Button","home__animation_block","artistsData","tracksData","isLoadingProfile","setValue","toArtistPage","deleteArtistInCollection","deleteMusicInCollection","toNewRelisesPage","profile__page_root","profile__page_loader","profile__page_title","profile__page_tabs","borderBottom","borderColor","Tabs","newValue","aria-label","Tab","label","profile__page_artists","artist__image","profile__page_empty","profile__page_tracks","setCountry","countAlbum","setAlbumCount","new__releases_root","new__releases_select","release","find__page_root","find__page_albums","find__albums_wrapper","AlbumIcon","find__page_artists","find__artists_wrapper","find__page_tracks","find__tracks_wrapper","useParams","isLikeArtist","setIsLikeArtist","setData","getArtistData","getArtistAlbums","artist__page_root","artist__main_icon","artists__total_likes","artist__like_icon","followers","total","artists__genres_list","Stack","direction","genre","Chip","SortTypes","addAlbum","setAddAlbum","savedTitle","setSavedTitle","savedAlbumImage","setSavedAlbumImage","totalTime","setTotalTime","time","setTime","setTracks","tracksLimitTime","setTracksLimitTime","timeAlert","Cancel","setTypeSort","getTotalTracksTime","useCallback","round","sum","current","getAlbumData","sortTracks","typeSort","sort","b","Long","Short","slice","handleLimitTime","album__page_root","album__page_header","album__page_time","album__add_icon","album__add_text","album__page_buttons","album__page_limit","album__page_tracks","album__page_loader","AppRouter","exact","render","fontWeight","ScrollToTop","pageYOffset","useWindowScroll","y","visible","setVisible","toTopButton","not_visible","window","scrollTo","top","behavior","ScrollToBottom","toBottomButton","document","documentElement","scrollHeight","App","app__wrapper","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","app_reducer","auth_reducer","profile_reducer","users_reducer","music_reducer","artistReducer","artist_reducer","album_reducer","genres_reducer","search_reducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","__store__","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.e24ad886.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"SearchForm_root__1dDn8\",\"search__icon\":\"SearchForm_search__icon__qmZSg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"new__releases_root\":\"NewReleases_new__releases_root__1cG1U\",\"new__releases_select\":\"NewReleases_new__releases_select__1HA0g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"album__card_root\":\"MusicAlbumCard_album__card_root__2zBo6\",\"album__card_image\":\"MusicAlbumCard_album__card_image__3x9hX\",\"album__card_title\":\"MusicAlbumCard_album__card_title__kOrhK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header__menu\":\"HeaderMenu_header__menu__1xEuN\",\"header__menu_close\":\"HeaderMenu_header__menu_close__UGpkS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"artist__albums_root\":\"ArtistAlbums_artist__albums_root__1n7J9\",\"artist__albums_wrapper\":\"ArtistAlbums_artist__albums_wrapper__2c9Ji\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toTopButton\":\"ScrollToTop_toTopButton__VqG1t\",\"not_visible\":\"ScrollToTop_not_visible__1jM0M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toBottomButton\":\"ScrollToBottom_toBottomButton__1qgn-\",\"not_visible\":\"ScrollToBottom_not_visible__1C3JP\",\"toTopButton\":\"ScrollToBottom_toTopButton__2KUmb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app__wrapper\":\"App_app__wrapper__1KDe-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"SearchUsers_root__3DhiZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile__page_root\":\"ProfilePage_profile__page_root__2FNmm\",\"profile__page_title\":\"ProfilePage_profile__page_title__bOhtl\",\"profile__page_tabs\":\"ProfilePage_profile__page_tabs__1jJuv\",\"profile__page_artists\":\"ProfilePage_profile__page_artists__1xk_A\",\"artist__image\":\"ProfilePage_artist__image__3ierA\",\"profile__page_empty\":\"ProfilePage_profile__page_empty__2EEkW\",\"profile__page_tracks\":\"ProfilePage_profile__page_tracks__bxHhC\",\"profile__page_loader\":\"ProfilePage_profile__page_loader__37mCw\"};","import axios from 'axios'\r\nimport { SpotifyCredentials } from '../credentials/credentials'\r\nimport { ArtistDataType, AlbumsDataType } from '../types/music_types'\r\nimport { AxiosRequestConfig } from 'axios'\r\n\r\nconst credentials = SpotifyCredentials()\r\n\r\nexport const musicTokenAPI = {\r\n  getToken() {\r\n      return axios('https://accounts.spotify.com/api/token', {\r\n        headers: {\r\n          'Content-Type' : 'application/x-www-form-urlencoded',\r\n          'Authorization' : 'Basic ' + btoa(credentials.ClientId + ':' + credentials.ClientSecret)      \r\n        },\r\n        data: 'grant_type=client_credentials',\r\n        method: 'POST'\r\n      }).then(token => token.data.access_token).then(token => localStorage.setItem('spotifyToken', token))\r\n  }\r\n}\r\n\r\nconst authInterceptor = (config: AxiosRequestConfig) => { \r\n  config.headers.authorization = `Bearer ${localStorage.getItem('spotifyToken')}`\r\n  return config\r\n}\r\n\r\nconst $authHost = axios.create()\r\n\r\n$authHost.interceptors.request.use(authInterceptor)\r\n\r\nexport const musicAPI = {\r\n  getNewReleases(country: string, limit: number) {\r\n    return $authHost.get(`https://api.spotify.com/v1/browse/new-releases?country=${country}&limit=${limit}`).then(res => res.data.albums)\r\n  },\r\n  getAllCategories() {\r\n    return $authHost.get(`https://api.spotify.com/v1/browse/categories`).then(res => res.data)\r\n  },\r\n  search(query: string, type: string ) {\r\n    return $authHost.get(`https://api.spotify.com/v1/search?query=${query}&type=${type}`).then(res => res.data)\r\n  },\r\n  getArtistData(artistId: string) {\r\n    return $authHost.get<ArtistDataType>(`https://api.spotify.com/v1/artists/${artistId}`).then(res => res.data)\r\n  },\r\n  getArtistAlbums(artistId: string, offset: number = 5, limit: number = 50) {\r\n    return $authHost.get<AlbumsDataType>(`https://api.spotify.com/v1/artists/${artistId}/albums?offset=${offset}&limit=${limit}`).then(res => res.data)\r\n  },\r\n  getAlbumData(albumId: string) {\r\n    return $authHost.get(`https://api.spotify.com/v1/albums/${albumId}/tracks`).then(res => res.data)\r\n  },\r\n  getGenres() {\r\n    return $authHost.get(`https://api.spotify.com/v1/recommendations/available-genre-seeds`).then(res => res.data)\r\n  }\r\n}","export const SpotifyCredentials = () => {\r\n    return {\r\n        ClientId: '9962a8bf1e754256891f78b9231ddb95',\r\n        ClientSecret: '724cbc40e69b4fea998131999085f85f',\r\n        baseURL: 'https://accounts.spotify.com/'\r\n    }\r\n}\r\n\r\nexport const SocialNetworkCredentials = () => {\r\n    return {\r\n        ApiKey: 'be25bc47-78e9-4634-b668-90794e8b62b9'\r\n    }\r\n}","import axios from \"axios\"\r\nimport {ResultCodesEnum} from '../types/auth_types'\r\nimport { SocialNetworkCredentials } from '../credentials/credentials'\r\n\r\nconst credentials = SocialNetworkCredentials()\r\n\r\nexport const instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\"API-KEY\": credentials.ApiKey},\r\n})\r\n\r\nexport enum ResultCodeForCapcthaEnum {\r\n    CaptchaIsRequired = 10\r\n}\r\n\r\nexport type APIResponseType<D = {}, RC = ResultCodesEnum> = {\r\n    data: D\r\n    messages: Array<string>\r\n    resultCode: RC\r\n}","import { InferActionsTypes, BaseThunkType } from './root_reducer'\r\nimport { musicAPI } from '../api/spotifyAPI'\r\n\r\nlet initialState = {\r\n    error: '',\r\n    isLoading: true,\r\n    albums: null as Array<any> | null,\r\n    artists: null as Array<any> | null,\r\n    tracks: null as Array<any> | null\r\n\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst searchReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'search/HANDLE_LOADER': {\r\n            return {\r\n                ...state, isLoading: action.loading\r\n            }\r\n        }\r\n        case 'search/CATCH_ERROR': {\r\n            return {\r\n                ...state, error: action.error\r\n            }\r\n        }\r\n        case 'search/GET_ALBUMS_RESPONSE': {\r\n            return {\r\n                ...state, albums: action.response\r\n            }\r\n        }\r\n        case 'search/GET_ARTISTS_RESPONSE': {\r\n            return {\r\n                ...state, artists: action.response\r\n            }\r\n        }\r\n        case 'search/GET_TRACKS_RESPONSE': {\r\n            return {\r\n                ...state, tracks: action.response\r\n            }\r\n        }\r\n        default: \r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const actions = {\r\n    handleLoader: (loading: boolean) => ({type: 'search/HANDLE_LOADER', loading} as const),\r\n    catchError: (error: string) => ({type: 'search/CATCH_ERROR', error} as const),\r\n    getArtists: (response: any) => ({type: 'search/GET_ARTISTS_RESPONSE', response} as const),\r\n    getAlbums: (response: any) => ({type: 'search/GET_ALBUMS_RESPONSE', response} as const),\r\n    getTracks: (response: any) => ({type: 'search/GET_TRACKS_RESPONSE', response} as const),\r\n}\r\n\r\nexport const getMusicSearchResponse = (query: string, type: string): ThunkType => {\r\n    return async(dispatch) => {\r\n        dispatch(actions.handleLoader(true))\r\n        let data = await musicAPI.search(query, type)\r\n        try{\r\n            if (data.albums) {\r\n                dispatch(actions.getAlbums(data.albums.items))\r\n            } else if (data.artists) {\r\n                dispatch(actions.getArtists(data.artists.items))\r\n            } else if (data.tracks) {\r\n                dispatch(actions.getTracks(data.tracks.items))\r\n            }\r\n        } catch {\r\n            dispatch(actions.catchError('some error'))\r\n        }\r\n        finally {\r\n            dispatch(actions.handleLoader(false))\r\n        }\r\n    }\r\n}\r\n\r\nexport default searchReducer\r\n\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsType>","import { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport styles from './SearchForm.module.scss'\r\nimport { getMusicSearchResponse } from '../../redux/music_search'\r\nimport SearchIcon from '@material-ui/icons/Search'\r\nimport { useHistory } from 'react-router'\r\nimport { useDebounce } from 'react-use'\r\n\r\nexport const MusicSearchForm = () => {\r\n    const [search, setSearch] = useState('')\r\n    const [type, setType] = useState('')\r\n    const [inputValue, setInputValue] = useState('')\r\n    const dispatch =  useDispatch()\r\n    const history = useHistory()\r\n\r\n    const selectType = (event: React.ChangeEvent<HTMLSelectElement>) => {\r\n        const value = event.target.value\r\n        setType(value)\r\n    }\r\n\r\n    const handleChangeInput = (event: React.FormEvent<HTMLInputElement>) => {\r\n        let value = event.currentTarget.value\r\n        setSearch(value)\r\n        setInputValue(value)\r\n    }\r\n\r\n    const find = (search: string, type: string, path: string = '/musicFind') => {\r\n            dispatch(getMusicSearchResponse(search, type))\r\n            setInputValue('')\r\n            history.push(path)\r\n    }\r\n\r\n    return (\r\n        <div className={styles.root}>\r\n            <input placeholder=\"Поиск...\" value={inputValue} onChange={(e) => handleChangeInput(e)}>\r\n            </input>\r\n            <select name=\"search\" onChange={selectType}>\r\n                <option value=\"\"></option>\r\n                <option value=\"album\">альбом</option>\r\n                <option value=\"artist\">артист</option>\r\n                <option value=\"track\">трек</option>\r\n            </select>\r\n            <div className={styles.search__icon}>\r\n                <SearchIcon onClick={() => find(search, type)} className={styles.header__search_icon} fontSize=\"large\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/user_without_photo.20d844db.png\";","import { InferActionsTypes, BaseThunkType } from './root_reducer'\r\nimport { EntryFormType } from '../types/auth_types'\r\n\r\nlet initialState = {\r\n    toggleOpen: false,\r\n    notificationCount: 0,\r\n    notificationText: [] as Array<string>,\r\n    formType: 'login' as EntryFormType\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst appReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'app/TOGGLE_OPEN': {\r\n            return {\r\n                ...state, toggleOpen: action.isOpen\r\n            }\r\n        }\r\n        case 'app/GET_NOTIFICATION': {\r\n            return {\r\n                ...state, notificationCount: state.notificationCount + action.count, notificationText: [...state.notificationText, action.text]\r\n            }\r\n        }\r\n        case 'app/DELETE_NOTIFICATIONS_COUNT': {\r\n            return {\r\n                ...state, notificationCount: 0\r\n            }\r\n        }\r\n        case 'app/CLEAR_NOTIFICATION': {\r\n            return {\r\n                ...state, notificationCount: 0, notificationText: []\r\n            }\r\n        }\r\n        case 'app/TOGGLE_FORM_TYPE': {\r\n            return {\r\n                ...state, formType: action.formType\r\n            }\r\n        }\r\n        default: \r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const actions = {\r\n    toggleOpen: (isOpen: boolean) => ({type: 'app/TOGGLE_OPEN', isOpen} as const),\r\n    notification: (count: number, text: string) => ({type: 'app/GET_NOTIFICATION', count, text} as const),\r\n    deleteNoteCount: () => ({type: 'app/DELETE_NOTIFICATIONS_COUNT'} as const),\r\n    clearNote: () => ({type: 'app/CLEAR_NOTIFICATION'} as const),\r\n    changeFormType: (formType: EntryFormType) => ({type: 'app/TOGGLE_FORM_TYPE', formType} as const)\r\n}\r\n\r\nexport const toogleOpenModalWindow = (isOpen: boolean): ThunkType => {\r\n    return async (dispatch) => {\r\n        await dispatch(actions.toggleOpen(isOpen))\r\n    }\r\n}\r\n\r\nexport const getNotification = (count: number, text: string): ThunkType => {\r\n    return async(dispatch) => {\r\n        await dispatch(actions.notification(count, text))\r\n    }\r\n}\r\n\r\nexport const deleteNotificationsCount = (): ThunkType => {\r\n    return async(dispatch) => {\r\n        await dispatch(actions.deleteNoteCount())\r\n    }\r\n}\r\n\r\nexport const clearNotifications = (): ThunkType => {\r\n    return async(dispatch) => {\r\n        await dispatch(actions.clearNote())\r\n    }\r\n}\r\n\r\nexport const toggleFormType = (type: EntryFormType): ThunkType => {\r\n    return async(dispatch) => {\r\n        await dispatch(actions.changeFormType(type))\r\n    }\r\n}\r\n\r\nexport default appReducer\r\n\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsType>","import { instance, APIResponseType, ResultCodeForCapcthaEnum } from './api'\r\nimport { LoginResponseType, ResultCodesEnum, AuthMe } from '../types/auth_types'\r\n\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get<APIResponseType<AuthMe>>(`auth/me`).then(res => res.data)\r\n    },\r\n    login(email: string | null, password: string | null, rememberMe: null | boolean = false, captcha: string | null) {\r\n        return instance.post<APIResponseType<LoginResponseType, ResultCodeForCapcthaEnum | ResultCodesEnum>>(`auth/login`, {email, password, rememberMe, captcha})\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n    },\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptcha() {\r\n        return instance.get('security/get-captcha-url')\r\n    }\r\n}","export type LoginType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n    captcha: boolean\r\n}\r\n\r\nexport type AuthMe = {\r\n    id: number\r\n    email: string\r\n    login: string\r\n}\r\n\r\nexport type AuthType = {\r\n    data: {\r\n        userId: number\r\n    }\r\n    resultCode: number\r\n    messages: Array<string>\r\n}\r\n\r\nexport type LoginResponseType = {\r\n    userId: number\r\n}\r\n\r\nexport enum ResultCodesEnum {\r\n    Success = 0,\r\n    Error = 1,\r\n    Captcha = 10\r\n}\r\n\r\nexport type UserType = {\r\n    userId: number | null, \r\n    login: string | null, \r\n    email: string | null,\r\n    isAuth: boolean\r\n}\r\n\r\nexport type EntryFormType = 'login' | 'registration'","import { InferActionsTypes, BaseThunkType } from './root_reducer'\r\nimport { authAPI, securityAPI } from '../api/authAPI'\r\nimport { AuthType, ResultCodesEnum } from '../types/auth_types'\r\nimport { musicTokenAPI } from '../api/spotifyAPI'\r\n\r\nlet initialState = {\r\n    userId: null as number | null,\r\n    messages: [] as Array<string>,\r\n    resultCode: 0,\r\n    email: null as string | null,\r\n    login: null as string | null,\r\n    isAuth: false,\r\n    error: null as string | null,\r\n    registrationMessage: null as string | null, // регистрация в API пока не предусмотрена, вызывается alert с оповещением\r\n    captcha: null as string | null,\r\n    isSpotifyAuth: false,\r\n    isLoading: false\r\n}\r\nexport type InitialStateType = typeof initialState\r\n\r\n\r\nconst appReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'auth/USER_LOGIN': {\r\n            return {\r\n                ...state, userId: action.payload.data.userId, isAuth: true\r\n            }\r\n        }\r\n        case 'auth/GET_USER': {\r\n            return {\r\n                ...state, userId: action.payload.userId, email: action.payload.email, \r\n                login: action.payload.login, isAuth: action.payload.isAuth\r\n            }\r\n        }\r\n        case 'auth/USER_LOGOUT': {\r\n            return {\r\n                ...state, userId: action.payload.userId, email: action.payload.email, \r\n                login: action.payload.login, isAuth: action.payload.isAuth,\r\n            }\r\n        }\r\n        case 'auth/CATCH_ERROR': {\r\n            return {\r\n                ...state, error: action.error\r\n            }\r\n        }\r\n        case 'auth/REGISTRATION': \r\n            return {\r\n                ...state, registrationMessage: action.message\r\n            }\r\n        case 'auth/GET_CAPTCHA': \r\n            return {\r\n                ...state, captcha: action.captcha\r\n            }\r\n        case 'auth/GET_SPOTIFY_TOKEN':\r\n            return {\r\n                ...state, isSpotifyAuth: action.auth\r\n            }\r\n        case 'auth/IS_LOADING': {\r\n            return {\r\n                ...state, isLoading: action.load\r\n            }\r\n        }\r\n        default: \r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const actions = {\r\n    loginAction: (payload: AuthType) => ({type: 'auth/USER_LOGIN', payload} as const),\r\n    getUserData: (userId: number | null, login: string | null, email: string | null, isAuth: boolean) => ({type: 'auth/GET_USER', \r\n    payload: {\r\n        userId, login, email, isAuth\r\n    }} as const),\r\n    logoutAction: (userId: number | null, login: string | null, email: string | null, isAuth: boolean) => ({type: 'auth/USER_LOGOUT',\r\n    payload: {\r\n        userId, login, email, isAuth\r\n    }} as const),\r\n    catchError: (error: string | null) => ({type: 'auth/CATCH_ERROR', error} as const),\r\n    registration: (message: string | null) => ({type: 'auth/REGISTRATION', message} as const),\r\n    captcha: (captcha: string | null) => ({type: 'auth/GET_CAPTCHA', captcha} as const),\r\n    spotifyToken: (auth: boolean) => ({type: 'auth/GET_SPOTIFY_TOKEN', auth} as const),\r\n    isLoading: (load: boolean) => ({type: 'auth/IS_LOADING', load} as const)\r\n}\r\n\r\nexport const loginOrRegistration = (email: string, password: string, rememberMe: boolean, formType: string, captcha: string | null): ThunkType => {\r\n    return async (dispatch) => {\r\n        try {\r\n            if(formType === 'login') {\r\n                dispatch(actions.isLoading(true))\r\n                let response = await authAPI.login(email, password, rememberMe, captcha)\r\n                await musicTokenAPI.getToken()\r\n    \r\n                if(response.data.resultCode === ResultCodesEnum.Success) {\r\n                    dispatch(actions.loginAction(response.data))\r\n                    dispatch(actions.spotifyToken(true))\r\n                    dispatch(actions.isLoading(false))\r\n                } else if(response.data.resultCode === ResultCodesEnum.Captcha) {\r\n                    dispatch(getCaptcha())\r\n                    dispatch(actions.isLoading(false))\r\n                } else if(response.data.resultCode === ResultCodesEnum.Error) {\r\n                    dispatch(actions.catchError('Неверный Email или Password'))\r\n                    dispatch(actions.isLoading(false))\r\n                } else {\r\n                    dispatch(actions.catchError('Неизвестная ошибка'))\r\n                    dispatch(actions.isLoading(false))\r\n                }\r\n    \r\n            } else {\r\n                //В SamuraiJS Social Network API пока не предусмотрена регистрация пользователей. Вызывается alert\r\n                // с информацией, что пока регистрация не возможна. \r\n                \r\n                dispatch(actions.registration(`API, на базе которого создан сайт, пока не предоставляет возможность для регистрации пользователей`))\r\n            }\r\n        } catch(error) {\r\n            dispatch(actions.catchError(\"Произошла ошибка\"))\r\n        } finally {\r\n            dispatch(actions.isLoading(false))\r\n        }\r\n    }\r\n}\r\n\r\nexport const getCaptcha = (): ThunkType => {\r\n    return async(dispatch) => {\r\n        let response = await securityAPI.getCaptcha()\r\n        dispatch(actions.captcha(response.data.url))\r\n    }\r\n}\r\n\r\nexport const getOwnUserData = (): ThunkType => {\r\n    return async (dispatch) => {\r\n        try {\r\n            dispatch(actions.isLoading(true))\r\n            let response = await authAPI.me()\r\n            if(response.resultCode === ResultCodesEnum.Success) {\r\n                let {id, login, email} = response.data\r\n                dispatch(actions.getUserData(id, login, email, true))\r\n            }\r\n            dispatch(actions.isLoading(false))\r\n        } catch (error) {\r\n            dispatch(actions.catchError(\"Произошла ошибка\"))\r\n        } finally {\r\n            dispatch(actions.isLoading(false))\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nexport const logout = (): ThunkType => {\r\n    return async(dispatch) => {\r\n        let response = await authAPI.logout()\r\n        if(response.data.resultCode === 0) {\r\n            dispatch(actions.logoutAction(null, null, null, false))\r\n            dispatch(actions.registration(null))\r\n        }\r\n    }\r\n}\r\n\r\nexport default appReducer\r\n\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsType>","import { InferActionsTypes, BaseThunkType } from './root_reducer'\r\nimport { profileAPI } from '../api/profileAPI'\r\nimport { ProfileType } from '../types/profile_types'\r\n\r\nexport type MusicData = {\r\n    name: string\r\n    id: string\r\n    image?: string\r\n}\r\n\r\n\r\nlet initialState = {\r\n    profile: null as ProfileType | null,\r\n    isLoad: false,\r\n    likedArtistNames: [] as Array<MusicData>,\r\n    likedAlbumsNames: [] as Array<MusicData>,\r\n    likedTracks: [] as Array<MusicData>,\r\n    error: ''\r\n}\r\nexport type InitialStateType = typeof initialState\r\n\r\n\r\nconst profileReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'profile/GET_PROFILE': {\r\n            return {\r\n                ...state, profile: action.payload\r\n            }\r\n        }\r\n        case 'profile/IS_LOADING': {\r\n            return {\r\n                ...state, isLoad: action.load\r\n            }\r\n        }\r\n        case 'profile/SET_ALBUM_ID': {\r\n            return {\r\n                ...state, likedAlbumsNames: [...state.likedAlbumsNames, action.data]\r\n            }\r\n        }\r\n        case 'profile/SET_ARTIST_ID': {\r\n            return {\r\n                ...state, likedArtistNames: [...state.likedArtistNames, action.data]\r\n            }\r\n        }\r\n        case 'profile/SET_TRACK_ID': {\r\n            return {\r\n                ...state, likedTracks: [...state.likedTracks, action.data]\r\n            }\r\n        }\r\n        case 'profile/DELETE_ARTIST_IN_COLL': {\r\n            return {\r\n                ...state, likedArtistNames: [...state.likedArtistNames.filter(el => el.id !== action.id)]\r\n            }\r\n        }\r\n        case 'profile/DELETE_ALBUM_IN_COLL': {\r\n            return {\r\n                ...state, likedAlbumsNames: [...state.likedAlbumsNames.filter(el => el.id !== action.id)]\r\n            }\r\n        }\r\n        case 'profile/DELETE_TRACK_IN_COLL': {\r\n            return {\r\n                ...state, likedTracks: [...state.likedTracks.filter(el => el.id !== action.id)]\r\n            }\r\n        }\r\n        case 'profile/FETCH_ERROR': {\r\n            return {\r\n                ...state, error: action.error\r\n            }\r\n        }\r\n        default: \r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const actions = {\r\n    getProfile: (payload: ProfileType) => ({type: 'profile/GET_PROFILE', payload} as const),\r\n    loading: (load: boolean) => ({type: 'profile/IS_LOADING', load} as const),\r\n    setArtistsName: (data: MusicData) => ({type: 'profile/SET_ARTIST_ID', data} as const),\r\n    setAlbumsName: (data: MusicData) => ({type: 'profile/SET_ALBUM_ID', data} as const),\r\n    setTrack: (data: MusicData) => ({type: 'profile/SET_TRACK_ID', data} as const),\r\n    deleteAlbum: (id: string) => ({type: 'profile/DELETE_ALBUM_IN_COLL', id} as const),\r\n    deleteArtist: (id: string) => ({type: 'profile/DELETE_ARTIST_IN_COLL', id} as const),\r\n    deleteTrack: (id: string) => ({type: 'profile/DELETE_TRACK_IN_COLL', id} as const),\r\n    fetchError: (error: string) => ({type: 'profile/FETCH_ERROR', error} as const)\r\n}\r\n\r\nexport const getUserProfile = (userId: number): ThunkType => {\r\n    return async (dispatch) => {\r\n        dispatch(actions.loading(true))\r\n        try {\r\n            let data = await profileAPI.getUserProfile(userId)\r\n            dispatch(actions.getProfile(data))\r\n            dispatch(actions.loading(false))\r\n        } catch (error) {\r\n            dispatch(actions.fetchError('Произошла ошибка'))\r\n        } finally {\r\n            dispatch(actions.loading(false))\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nexport enum MusicEnum {\r\n    ALBUM = 'album',\r\n    ARTIST = 'artist',\r\n    TRACK = 'track'\r\n}\r\n\r\nexport const setIdOfLikedMusic = (data: MusicData, type: MusicEnum): ThunkType => {\r\n    return async (dispatch) => {\r\n        dispatch(actions.loading(true))\r\n        if (type === MusicEnum.ARTIST) {\r\n            dispatch(actions.setArtistsName(data))\r\n        } else if (type === MusicEnum.ALBUM) {\r\n            dispatch(actions.setAlbumsName(data))\r\n        } else if (type === MusicEnum.TRACK) {\r\n            dispatch(actions.setTrack(data))\r\n        }\r\n        dispatch(actions.loading(false))\r\n    }\r\n}\r\n\r\nexport enum DELETE_MUSIC_ENUM {\r\n    ALBUM = 'album',\r\n    ARTIST = 'artist',\r\n    TRACK = 'track'\r\n}\r\n\r\nexport const deleteMusicInCollection = (id: string, type: DELETE_MUSIC_ENUM): ThunkType => {\r\n    return async(dispatch) => {\r\n        if(type === DELETE_MUSIC_ENUM.ARTIST) {\r\n            dispatch(actions.deleteArtist(id))\r\n        } else if(type === DELETE_MUSIC_ENUM.ALBUM) {\r\n            dispatch(actions.deleteAlbum(id))\r\n        } else if(type === DELETE_MUSIC_ENUM.TRACK) {\r\n            dispatch(actions.deleteTrack(id))\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nexport default profileReducer\r\n\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsType>","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useSelector } from 'react-redux'\r\nimport { logout } from '../../redux/auth_reducer'\r\nimport { AppStateType } from '../../redux/root_reducer'\r\nimport {toogleOpenModalWindow} from '../../redux/app_reducer'\r\nimport styles from './HeaderMenu.module.scss'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { useHistory } from 'react-router'\r\n\r\ntype PropsType = {\r\n    isOpen: boolean\r\n}\r\n\r\n\r\nexport const HeaderMenu: React.FC<PropsType> = ({isOpen}) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const isAuth = useSelector((state: AppStateType) => state.authReducer.isAuth)\r\n    const ownUserId = useSelector((state: AppStateType) => state.authReducer.userId)\r\n    const history = useHistory()\r\n\r\n    const userLogout = () => {\r\n        dispatch(logout())\r\n        history.push('/')\r\n    }\r\n    \r\n    return (\r\n        <div className={isOpen ? styles.header__menu : styles.header__menu_close}\r\n            onClick={() => dispatch(toogleOpenModalWindow(false))}\r\n        >\r\n                <ul>\r\n                    <NavLink to=\"/\">Главная</NavLink>\r\n                    { \r\n                        isAuth && ownUserId ? <ul>\r\n                                                <NavLink to={`/profile/${ownUserId}`}>Своя страница</NavLink> \r\n                                                <NavLink to=\"/new_releases\">Новые релизы</NavLink>\r\n                                            </ul> \r\n\r\n                        : null\r\n                    }\r\n                    {\r\n                        isAuth ? <button onClick={() => userLogout()}>Выйти</button> \r\n                        :\r\n                        \r\n                        <NavLink to=\"/login\">Войти</NavLink>\r\n                    }\r\n                </ul>\r\n        </div>\r\n    )\r\n}","import { AppStateType } from '../root_reducer'\r\n\r\nexport const getNotificationsCount = (state: AppStateType) => state.appReducer.notificationCount\r\n\r\nexport const getNotificationsText = (state: AppStateType) => state.appReducer.notificationText\r\n\r\nexport const isLoading = (state: AppStateType) => state.profileReducer.isLoad\r\n\r\nexport const getFormType = (state: AppStateType) => state.appReducer.formType","import { useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport styles from './Notification.module.scss'\r\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone'\r\nimport { getNotificationsCount, getNotificationsText } from '../../redux/selectors/appSelectors'\r\nimport { clearNotifications, deleteNotificationsCount } from '../../redux/app_reducer'\r\n\r\n\r\nexport const Notification = () => {\r\n\r\n    const notificationCount = useSelector(getNotificationsCount)\r\n    const notificationText = useSelector(getNotificationsText)\r\n    const dispatch = useDispatch()\r\n    const [isOpen, setIsOpen] = useState(false)\r\n\r\n    const handleOpen = () => {\r\n        if(notificationCount) {\r\n            dispatch(deleteNotificationsCount())\r\n        }\r\n        setIsOpen(!isOpen)\r\n    }\r\n\r\n    const clear = () => {\r\n        dispatch(clearNotifications())\r\n    }\r\n\r\n    return (\r\n        <div className={styles.notification__root} onClick={() => handleOpen()}>\r\n            {\r\n                notificationCount ? <div className={styles.notification__count}>\r\n                                    { notificationCount }\r\n                                </div>\r\n                            : null\r\n            }\r\n            <NotificationsNoneIcon fontSize=\"large\"/>\r\n            <div className={isOpen ? styles.notification__info_wrapper : styles.notification__close}>\r\n                <div>\r\n                {\r\n                    notificationText.length > 0 ? notificationText.map(note => <div className={styles.notification__info_text} key={note}>{note}</div>) \r\n                                    : <div className={styles.notification__info_text} >Нет новых уведомлений</div>\r\n                }\r\n                </div>\r\n                <button onClick={() => clear()}>Очистить</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { MusicSearchForm } from '../../forms/SearchForm/MusicSearchForm'\r\nimport styles from './Header.module.scss'\r\nimport userWithoutPhoto from '../../img/user_without_photo.png'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { toogleOpenModalWindow } from '../../redux/app_reducer'\r\nimport { AppStateType } from '../../redux/root_reducer'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\nimport { HeaderMenu } from '../HeaderMenu/HeaderMenu'\r\nimport { Notification } from '../Notification/Notification'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\n\r\nconst Header = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const isOpen = useSelector((state: AppStateType) => state.appReducer.toggleOpen)\r\n    const profile = useSelector((state: AppStateType) => state.profileReducer.profile)\r\n    const ownUserId = useSelector((state: AppStateType) => state.authReducer.userId)\r\n    const userId = useSelector((state: AppStateType) => state.profileReducer.profile?.userId)\r\n\r\n    return (\r\n        <div className={styles.header__container}>\r\n            <div className={styles.header__wrapper}>\r\n\r\n                <div className={styles.header__left_block}>\r\n                    <HeaderMenu isOpen={isOpen}/>\r\n                    <div className={styles.header__logo}>\r\n                        <NavLink to=\"/\">Music for developers</NavLink>\r\n                    </div>\r\n                    <div className={styles.header__search_input}>\r\n                        <MusicSearchForm />\r\n                    </div>\r\n                    <div className={styles.header__note_icon}>\r\n                        <Notification />\r\n                    </div>\r\n                </div>\r\n\r\n                <div>\r\n                    <div className={styles.header__user_logout}>\r\n                        {   (ownUserId === userId)  && profile && profile.photos.small ? <img src={profile.photos.small} alt=\"user_icon\"/>\r\n                            : <img src={userWithoutPhoto} alt=\"user_icon\"/>\r\n                        }\r\n                        \r\n                        <ExpandMoreIcon fontSize=\"large\" onClick={() => dispatch(toogleOpenModalWindow(!isOpen))}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","import { AppStateType } from '../root_reducer'\r\n\r\nexport const isUserAuth = (state: AppStateType) => state.authReducer.isAuth\r\n\r\nexport const getUserId = (state: AppStateType) => state.authReducer.userId\r\n\r\nexport const fetchError = (state: AppStateType) => state.authReducer.error\r\n\r\nexport const getRegMessage = (state: AppStateType) => state.authReducer.registrationMessage\r\n\r\nexport const getLoading = (state: AppStateType) => state.authReducer.isLoading","import * as React from 'react'\r\nimport Typography from '@mui/material/Typography'\r\nimport Box from '@mui/material/Box'\r\n\r\ninterface TabPanelProps {\r\n  children?: React.ReactNode\r\n  index: number\r\n  value: number\r\n}\r\n\r\nexport function TabPanel(props: TabPanelProps) {\r\n\r\n  const { children, value, index, ...other } = props\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box sx={{ p: 3 }}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}","import { AppStateType } from '../root_reducer'\r\nimport { createSelector } from 'reselect'\r\nimport { AlbumType } from '../../types/music_types'\r\n\r\nexport const fetchNewReleases = (state: AppStateType) => state.musicReducer.newReleasesData\r\n\r\nexport const getLoading = (state: AppStateType) => state.musicReducer.isLoading\r\n\r\nexport const fetchArtistData = (state: AppStateType) => state.musicReducer.artistData\r\n\r\nconst getArtistAlbums = (state: AppStateType) => state.musicReducer.albumsData\r\n\r\nexport const getAlbums = createSelector(\r\n    getArtistAlbums, \r\n    (items: Array<AlbumType>) => [...items.reduce((map: any, album: AlbumType) => map.set(album.name, album), new Map()).values()]\r\n)\r\n\r\nexport const getAlbum = (state: AppStateType) => state.albumReducer.albumData\r\n\r\nexport const getAlbumTitle = (state: AppStateType) => state.albumReducer.albumTitle\r\n\r\nexport const getAlbumImage = (state: AppStateType) => state.albumReducer.albumImage\r\n\r\nexport const getGenres = (state: AppStateType) => state.genresReducer.genres\r\n\r\nexport const albumsSearchResponse = (state: AppStateType) => state.searchReducer.albums\r\nexport const artistsSearchResponse = (state: AppStateType) => state.searchReducer.artists\r\nexport const tracksSearchResponse = (state: AppStateType) => state.searchReducer.tracks\r\n\r\nexport const searchResponse = albumsSearchResponse || artistsSearchResponse || tracksSearchResponse\r\n\r\nexport const getArtistsNames = (state: AppStateType) => state.profileReducer.likedArtistNames\r\n\r\nexport const getLikedAlbums = (state: AppStateType) => state.profileReducer.likedAlbumsNames\r\n\r\nexport const getLikedTracks = (state: AppStateType) => state.profileReducer.likedTracks","import styles from './LoaderTwo.module.scss'\r\nimport MusicNoteIcon from '@material-ui/icons/MusicNote'\r\n\r\n\r\nexport const LoaderTwo = () => {\r\n    return (\r\n        <div className={styles.loader__root}>\r\n            <div className={styles.loader__block_one}><MusicNoteIcon /></div>\r\n            <div className={styles.loader__block_two}><MusicNoteIcon /></div>\r\n            <div className={styles.loader__block_three}><MusicNoteIcon /></div>\r\n        </div>\r\n    )\r\n}","import * as React from 'react'\r\nimport { Formik, Form, Field } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { AppStateType } from '../../redux/root_reducer'\r\nimport { loginOrRegistration } from '../../redux/auth_reducer'\r\nimport styles from './Login.module.scss'\r\n\r\nconst SignupSchema = Yup.object().shape({\r\n  email: Yup.string().email('Некорректный адрес электронной почты').required('Заполните поле email'),\r\n  password: Yup.string()\r\n  .min(2, 'Короткий пароль')\r\n  .max(20, 'Слишком длинный пароль')\r\n  .required('Заполните поле password'),\r\n})\r\ninterface MyFormValues {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n    captcha: string | null\r\n}\r\n \r\n export const LoginRegForm: React.FC<{}> = () => {\r\n\r\n   const initialValues: MyFormValues = { \r\n                                        email: '', \r\n                                        password: '', \r\n                                        rememberMe: false,\r\n                                        captcha: ''\r\n                                    }\r\n\r\n  const dispatch = useDispatch()\r\n  const formType: 'login' | 'registration'  = useSelector((state: AppStateType) => state.appReducer.formType)\r\n  const captchaUrl = useSelector((state: AppStateType) => state.authReducer.captcha)\r\n\r\n   return (\r\n     <div className={styles.login__form_wrapper}>\r\n       <p>Тестовые данные для входа: \r\n         <br/>\r\n         <br/>\r\n         Email: test.user.react@yandex.ru\r\n         <br/>\r\n         <br/>\r\n          Password: test_free</p>\r\n       <Formik\r\n         initialValues={initialValues}\r\n         validationSchema={SignupSchema}\r\n         onSubmit={(values, actions) => {\r\n           dispatch(loginOrRegistration(values.email, values.password, values.rememberMe, formType, values.captcha))\r\n           actions.resetForm()\r\n         }}\r\n       > \r\n       {({ errors, touched }) => (\r\n         <Form>\r\n           <div className={styles.form__inputs}>\r\n            <Field id=\"email\" name=\"email\" placeholder=\"Email\" />\r\n            {errors.email && touched.email ? <div className={styles.email__errors}>{errors.email}</div> : null}\r\n            <Field id=\"password\" name=\"password\" type=\"password\" autoComplete=\"on\" placeholder=\"password\"/>\r\n            {errors.password && touched.password ? <div className={styles.password__errors}>{errors.password}</div> : null}\r\n           </div>\r\n\r\n           <div className={styles.form__remember_me}>\r\n             <div className={styles.remember_me_text}><label htmlFor=\"rememberMe\">Запомнить</label></div>\r\n             <div className={styles.remember__me_checkbox}><Field id=\"rememberMe\" name=\"rememberMe\"  type=\"checkbox\"/></div>\r\n           </div>\r\n\r\n           {\r\n             captchaUrl ? \r\n              <div className={styles.captcha}>\r\n                Введите символы\r\n                <img src={captchaUrl} alt=\"captcha\"/>\r\n                <Field id=\"captcha\" name=\"captcha\"/>\r\n              </div>\r\n             : null\r\n           }\r\n\r\n          <button type=\"submit\">\r\n             {\r\n               formType === 'login' ? 'Вход' : 'Регистрация'\r\n             }\r\n          </button>\r\n         </Form> )}\r\n       </Formik>\r\n     </div>\r\n   );\r\n };","import { instance, APIResponseType } from './api'\r\nimport {GetUsersItemsType} from '../types/users_types'\r\n\r\n\r\nexport const usersAPI = {\r\n    getAllUsers(count: number, page: number, term: string = '', friend: boolean | '') {\r\n        return instance.get<GetUsersItemsType>(`/users?count=${count}&page=${page}&term=${term}&friend=${friend}`).then(res => res.data)\r\n    },\r\n    follow(userId: number) {\r\n        return instance.post<APIResponseType>(`follow/${userId}`).then(res => res.data)\r\n    },\r\n    unfollow(userId: number) {\r\n        return instance.delete<APIResponseType>(`follow/${userId}`).then(res => res.data)\r\n    },\r\n    getFriend(userId: number) {\r\n        return instance.get<APIResponseType>(`follow/${userId}`).then(res => res.data)\r\n    }\r\n}","import { InferActionsTypes, BaseThunkType } from './root_reducer'\r\nimport { usersAPI } from '../api/usersAPI'\r\nimport { UserType } from '../types/users_types'\r\n\r\n\r\nlet initialState = {\r\n    users: [] as Array<UserType>,\r\n    totalCount: 0,\r\n    showUserCount: 10,\r\n    currentPage: 1,\r\n    term: '',\r\n    isLoading: false,\r\n    follow: false\r\n}\r\nexport type InitialStateType = typeof initialState\r\n\r\n\r\nconst profileReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'users/GET_ALL_USERS': {\r\n            return {\r\n                ...state, users: action.users\r\n                \r\n            }\r\n        }\r\n        case 'users/GET_TOTAL_COUNT': {\r\n            return {\r\n                ...state, totalCount: action.totalCount\r\n            }\r\n        }\r\n        case 'users/SET_USERS_COUNT': {\r\n            return {\r\n                ...state, showUserCount: action.count\r\n            }\r\n        }\r\n        case 'users/SET_CURRENT_PAGE': {\r\n            return {\r\n                ...state, currentPage: action.page\r\n            }\r\n        }\r\n        case 'users/FIND_USERS': {\r\n            return {\r\n                ...state, term: action.term\r\n            }\r\n        }\r\n        case 'users/TOGGLE_LOADING': {\r\n            return {\r\n                ...state, isLoading: action.loading\r\n            }\r\n        }\r\n        case 'users/FOLLOW_USER': {\r\n            return {\r\n                ...state, follow: action.response\r\n            }\r\n        }\r\n        default: \r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const actions = {\r\n    allUsers: (users: Array<UserType>) => ({type: 'users/GET_ALL_USERS', users} as const),\r\n    getUsersTotalCount: (totalCount: number) => ({type: 'users/GET_TOTAL_COUNT', totalCount} as const),\r\n    setShowUsersCount: (count: number) => ({type: 'users/SET_USERS_COUNT', count} as const),\r\n    setPageNumber: (page: number) => ({type: 'users/SET_CURRENT_PAGE', page} as const),\r\n    findUsersAction: (term: string) => ({type: 'users/FIND_USERS', term} as const),\r\n    toggleLoading: (loading: boolean) => ({type: 'users/TOGGLE_LOADING', loading} as const),\r\n    follow: (response: boolean) => ({type: 'users/FOLLOW_USER', response} as const)\r\n}\r\n\r\nexport const getAllUsers = (count: number, page: number, term: string, friend: boolean | ''): ThunkType => {\r\n    return async (dispatch) => {\r\n        dispatch(actions.toggleLoading(true))\r\n\r\n        let data = await usersAPI.getAllUsers(count, page, term, friend)\r\n\r\n        dispatch(actions.allUsers(data.items))\r\n        dispatch(actions.getUsersTotalCount(data.totalCount))\r\n        dispatch(actions.toggleLoading(false))\r\n    }\r\n}\r\n\r\nexport const toggleShowUsersCount = (count: number): ThunkType => {\r\n    return async(dispatch) => {\r\n        dispatch(actions.toggleLoading(true))\r\n        dispatch(actions.setShowUsersCount(count))\r\n        dispatch(actions.toggleLoading(false))\r\n    }\r\n}\r\n\r\nexport const changeCurrentPage = (page: number): ThunkType => {\r\n    return async(dispatch) => {\r\n        dispatch(actions.toggleLoading(true))\r\n        dispatch(actions.setPageNumber(page))\r\n        dispatch(actions.toggleLoading(false))\r\n    }\r\n}\r\n\r\nexport const findUsers = (term: string): ThunkType => {\r\n    return async(dispatch) => {\r\n        dispatch(actions.toggleLoading(true))\r\n        dispatch(actions.findUsersAction(term))\r\n        dispatch(actions.toggleLoading(false))\r\n    }\r\n}\r\n\r\nexport const followUser = (userId: number): ThunkType => {\r\n    return async(dispatch) => {\r\n        let response = await usersAPI.follow(userId)\r\n\r\n        if(response.resultCode === 0) {\r\n            dispatch(actions.follow(true))\r\n        }\r\n    }\r\n}\r\n\r\nexport const checkIsUserFriend = (userId: number): ThunkType => {\r\n    return async(dispatch) => {\r\n        let response = await usersAPI.getFriend(userId)\r\n\r\n        if(response) {\r\n            dispatch(actions.follow(true))\r\n        } else {\r\n            dispatch(actions.follow(false))\r\n        }\r\n    }\r\n}\r\n\r\nexport default profileReducer\r\n\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsType>","import React from 'react'\r\nimport styles from './UserCard.module.scss'\r\nimport userWithoutPhoto from '../../img/user_without_photo.png'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\ntype PropsType = {\r\n    name:string\r\n    id:number\r\n    uniqueUrlName: string | null\r\n    status: string | null\r\n    followed: boolean\r\n    photo: string | null\r\n}\r\n\r\n\r\nconst UserCard: React.FC<PropsType> = ({name, id, status,  photo}) => {\r\n\r\n    const history = useHistory()\r\n\r\n    const showUserProfile = () => {\r\n        history.push(`/profile/${id}`)\r\n    }\r\n\r\n    return (\r\n        <div className={styles.userCard__wrapper}>\r\n            <div className={styles.user__card_icon}>\r\n                {\r\n                    photo ? <img src={photo} alt=\"user_icon\"/>\r\n                    : <img src={userWithoutPhoto} alt=\"user_icon\" />\r\n                }\r\n                \r\n            </div>\r\n\r\n            <div className={styles.user__card_name}>\r\n                {name ? name : \"Имя отсутствует\"}\r\n            </div>\r\n            \r\n            <div className={styles.user__card_status}>\r\n                {\r\n                    status ? status : null\r\n                }\r\n            </div>    \r\n            <button onClick={() => showUserProfile()}>Показать профиль</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserCard","import React, {useState, useEffect}  from 'react'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport { AppStateType } from '../../redux/root_reducer'\r\nimport styles from './Pagination.module.scss'\r\nimport SkipNextIcon from '@material-ui/icons/SkipNext'\r\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious'\r\nimport { changeCurrentPage, toggleShowUsersCount} from '../../redux/users_reducer'\r\n\r\n\r\n\r\n// Later fix error: after return from profile page, disappear current page and pages\r\n\r\n\r\nexport const Pagination = () => {\r\n\r\n    const totalUsersCount = useSelector((state: AppStateType) => state.usersReducer.totalCount)\r\n    const currentPage = useSelector((state: AppStateType) => state.usersReducer.currentPage)\r\n    const usersPortionShow = useSelector((state: AppStateType) => state.usersReducer.showUserCount)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [pages, setPages] = useState([1, 2, 3])\r\n    const lastPage = Math.ceil(totalUsersCount/usersPortionShow)\r\n\r\n    useEffect(() => {\r\n        if(totalUsersCount < 10) {\r\n            setPages([1])\r\n        } else {\r\n            setPages([1, 2, 3])\r\n        }\r\n    }, [totalUsersCount])\r\n\r\n    const handleSelectValue = (event: React.ChangeEvent<HTMLSelectElement>) => {\r\n        let {value} = event.target\r\n        dispatch(toggleShowUsersCount(+value))\r\n        dispatch(changeCurrentPage(1))\r\n        if(totalUsersCount < (+value)) {\r\n            setPages([1])\r\n        } else {\r\n            setPages([1, 2, 3])\r\n        }\r\n    }\r\n\r\n    const selectPage = (page: number) => {\r\n        dispatch(changeCurrentPage(page))\r\n        if(page === lastPage) {\r\n            if(page === 1 && pages.length === 1) {\r\n                return\r\n            }\r\n            setPages([pages[2] = lastPage , pages[1] = lastPage - 1, pages[0] = lastPage - 2].reverse())\r\n            dispatch(changeCurrentPage(lastPage))\r\n        } \r\n    }\r\n\r\n    const selectNextPage = () => {\r\n        if(pages[2] < lastPage) {\r\n            setPages(pages.map(page => page + 1))\r\n        }\r\n        dispatch(changeCurrentPage(currentPage + 1))\r\n    }\r\n\r\n    const selectPrevPage = () => {\r\n        if(pages[0] >= 2) {\r\n            setPages(pages.map(page => page - 1))\r\n        }\r\n        dispatch(changeCurrentPage(currentPage - 1))\r\n    }\r\n\r\n    const selectFirstPage = () => {\r\n        setPages([1, 2, 3])\r\n        dispatch(changeCurrentPage(1))\r\n    }\r\n\r\n    const showFirstEllipsis = () => {\r\n        if(pages[2] > 4 ) {\r\n            return <div>...</div>\r\n        } return null\r\n    }\r\n\r\n    const showSecondEllipsis = () => {\r\n        if(pages[2] === lastPage || pages.length === 1) {\r\n            return null\r\n        } return <div>...</div>\r\n    }\r\n\r\n    return (\r\n        <div className={styles.pagination__root}>\r\n            {\r\n                totalUsersCount < 10 ? null :\r\n                <div className={styles.pagination__select}>\r\n                    Показывать по \r\n                    <select name=\"usersCount\" onChange={handleSelectValue}>\r\n                        <option value=\"10\">10</option>\r\n                        <option value=\"20\">20</option>\r\n                        <option value=\"50\">50</option>\r\n                    </select>\r\n                    пользователей на странице\r\n                </div>\r\n            }\r\n            <ul className={styles.pagination__list}>\r\n                <button disabled={currentPage === 1} onClick={() => selectPrevPage()}>\r\n                    <SkipPreviousIcon />\r\n                </button>\r\n                {\r\n                    pages[0] === 1\r\n                    ? null :\r\n                    <li onClick={() => selectFirstPage()} className={\r\n                        currentPage === 1 ? styles.pagination__list_active : styles.pagination__list}>\r\n                            {\r\n                                1\r\n                            }\r\n                    </li>\r\n                }\r\n                {\r\n                    showFirstEllipsis()\r\n                }\r\n                {\r\n                    pages.map(p => <li key={p} onClick={() => selectPage(p)} className={\r\n                        currentPage === p ? styles.pagination__list_active : styles.pagination__list\r\n                    }>{p}</li>)\r\n                }\r\n                {\r\n                    showSecondEllipsis()\r\n                }\r\n                {\r\n                    pages[2] === lastPage || pages.length === 1\r\n                    ? null :\r\n                    <li onClick={() => selectPage(lastPage)} className={\r\n                        currentPage === lastPage ? styles.pagination__list_active : styles.pagination__list}>\r\n                            {\r\n                                lastPage\r\n                            }\r\n                    </li>\r\n                }\r\n                \r\n                <button disabled={currentPage >= lastPage} onClick={() => selectNextPage()}>\r\n                    <SkipNextIcon />\r\n                </button>\r\n            </ul>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport { findUsers } from '../../redux/users_reducer'\r\nimport { useDispatch } from 'react-redux'\r\nimport styles from './SearchUsers.module.scss'\r\n\r\n\r\nexport const SearchUsers = () => {\r\n\r\n    const [search, setSearch] = useState('')\r\n    const dispatch =  useDispatch()\r\n\r\n    const handleChangeInput = (event: React.FormEvent<HTMLInputElement>) => {\r\n        let {value} = event.currentTarget\r\n        setSearch(value)\r\n    }\r\n\r\n    const find = (search: string) => {\r\n        dispatch(findUsers(search))\r\n    }\r\n\r\n    return (\r\n        <div className={styles.root}>\r\n            <input placeholder=\"Search user...\" onChange={(e) => handleChangeInput(e)}></input>\r\n            <button onClick={() => find(search)}>найти</button>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport styles from './Loader.module.scss'\r\n\r\n\r\nexport const Loader = () => {\r\n    return (\r\n        <div className={styles.loader__wrapper}>\r\n            {/* Загрузка... */}\r\n            <div className={styles.loader__animation_block}>\r\n                <div className={styles.loader__block_one}></div>\r\n                <div className={styles.loader__block_two}></div>\r\n                <div className={styles.loader__block_three}></div>\r\n                <div className={styles.loader__block_four}></div>\r\n                <div className={styles.loader__block_five}></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useEffect} from 'react'\r\nimport styles from './UsersPage.module.scss'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { AppStateType } from '../../redux/root_reducer'\r\nimport { getAllUsers } from '../../redux/users_reducer'\r\nimport UserCard from '../../components/UserCard/UserCard'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { Pagination } from '../../components/Pagination/Pagination'\r\nimport { SearchUsers } from '../../forms/SearchUsers/SearchUsers'\r\nimport { Loader } from '../../components/Loader/Loader'\r\n\r\n\r\nexport const UsersPage = React.memo(() => {\r\n\r\n  const users = useSelector((state: AppStateType) => state.usersReducer.users)\r\n  const showUsersCount = useSelector((state: AppStateType) => state.usersReducer.showUserCount)\r\n  const pageNumber = useSelector((state: AppStateType) => state.usersReducer.currentPage)\r\n  const searchTerm = useSelector((state: AppStateType) => state.usersReducer.term)\r\n  const totalUsersCount = useSelector((state: AppStateType) => state.usersReducer.totalCount)\r\n  const isLoading = useSelector((state: AppStateType) => state.usersReducer.isLoading)\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllUsers(showUsersCount, pageNumber, searchTerm, ''))\r\n  }, [dispatch, showUsersCount, pageNumber, searchTerm])\r\n\r\n  return (\r\n    <div className={styles.usersPage__wrapper}>\r\n\r\n      <SearchUsers />\r\n\r\n      <Pagination />\r\n\r\n      {\r\n        totalUsersCount === 0 ? <div className={styles.users__page_text}>Пользователи не найдены</div> : null\r\n      }\r\n\r\n      <div className={styles.users__page_grid}>\r\n        <Grid container spacing={3}>\r\n          { \r\n            isLoading ? <Loader /> :\r\n            users.map(user => <Grid item xs={6} sm={8} md={6} lg={6} xl={6} key={user.id} className={styles.users__card_wrapper}> \r\n                                <UserCard \r\n                                  id={user.id} \r\n                                  name={user.name}\r\n                                  status={user.status}\r\n                                  uniqueUrlName={user.uniqueUrlName}\r\n                                  followed={user.followed}\r\n                                  photo={user.photos.large}\r\n                                />\r\n                              </Grid>)\r\n          }\r\n        </Grid>\r\n      </div>\r\n    </div>\r\n  );\r\n})","import styles from './WaitGhost.module.scss'\r\n\r\n\r\nexport const GhostAnimation = () => {\r\n    return (\r\n        <div className={styles.main}>\r\n            <div className={styles.ghost__body}>\r\n                <div className={styles.ghost__hands}>\r\n                    <span></span>\r\n                    <span></span>\r\n                </div>\r\n                <div className={styles.ghost__face}>\r\n                    <div className={styles.ghost__eyes}>\r\n                        <span></span>\r\n                        <span></span>\r\n                    </div>\r\n                    <div className={styles.ghost_mouth}></div>\r\n                </div>\r\n                <div className={styles.ghost_feet}>\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n                </div>\r\n            </div>\r\n            {/* <div className={styles.text}>Hello!</div> */} \r\n        </div>\r\n    )\r\n}","import { InferActionsTypes, BaseThunkType } from './root_reducer'\r\nimport { musicAPI } from '../api/spotifyAPI'\r\n\r\nlet initialState = {\r\n    error: '',\r\n    isLoading: true,\r\n    genres: null as Array<string> | null\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst genresReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'genres/HANDLE_LOADER': {\r\n            return {\r\n                ...state, isLoading: action.loading\r\n            }\r\n        }\r\n        case 'genres/CATCH_ERROR': {\r\n            return {\r\n                ...state, error: action.error\r\n            }\r\n        }\r\n        case 'genres/GET_GENRES': {\r\n            return {\r\n                ...state, genres: action.genres\r\n            }\r\n        }\r\n        default: \r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const actions = {\r\n    handleLoader: (loading: boolean) => ({type: 'genres/HANDLE_LOADER', loading} as const),\r\n    catchError: (error: string) => ({type: 'genres/CATCH_ERROR', error} as const),\r\n    getGenres: (genres: Array<string>) => ({type: 'genres/GET_GENRES', genres} as const)\r\n}\r\n\r\nexport const getMusicGenres = (): ThunkType => {\r\n    return async(dispatch) => {\r\n        dispatch(actions.handleLoader(true))\r\n        let data = await musicAPI.getGenres()\r\n        try{\r\n           dispatch(actions.getGenres(data.genres))\r\n        } catch {\r\n            dispatch(actions.catchError('some error'))\r\n        }\r\n        finally {\r\n            dispatch(actions.handleLoader(false))\r\n        }\r\n    }\r\n}\r\n\r\nexport default genresReducer\r\n\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsType>","export default __webpack_public_path__ + \"static/media/adele.8bade973.jpg\";","export default __webpack_public_path__ + \"static/media/dua_lipa.09ed4882.jpg\";","export default __webpack_public_path__ + \"static/media/kanye_west.8ae5b47e.jpg\";","export default __webpack_public_path__ + \"static/media/hans.26489c70.jpg\";","export default __webpack_public_path__ + \"static/media/metallica.e77baa20.jpg\";","import { useState } from 'react'\r\nimport classes from './Slider.module.scss'\r\nimport ImgOne from '../../img/adele.jpg'\r\nimport ImgTwo from '../../img/dua_lipa.jpg'\r\nimport ImgThree from '../../img/kanye_west.jpg'\r\nimport ImgFour from '../../img/hans.jpg'\r\nimport ImgFive from '../../img/metallica.jpg'\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\r\n\r\n\r\nexport const Slider = () => {\r\n\r\n    let imgArray = [\r\n        ImgOne, ImgTwo, ImgThree, ImgFour, ImgFive\r\n    ];\r\n\r\n    const [posX, setPosX] = useState(0);\r\n    const [isFinishNext, setIsFinishNext] = useState(false);\r\n    const [isFinishPrev, setIsFinishPrev] = useState(false);\r\n\r\n    const toPrev = () => {\r\n        if(posX === 0) {\r\n            setIsFinishPrev(true);\r\n            setIsFinishNext(false);\r\n        } else {\r\n            setPosX(posX + 100);\r\n        }\r\n    };\r\n\r\n    const toNext = () => {\r\n        if(posX === -100 * (imgArray.length -1)) {\r\n            setIsFinishNext(true);\r\n        } else {\r\n            setPosX(posX - 100);\r\n            setIsFinishPrev(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={classes.main}>\r\n            {\r\n                imgArray.map((elem, index) => {\r\n                    return <div key={index} className={classes.slider__img_wrapper} style={{transform: `translateX(${posX}%)`}}>\r\n                        <img src={elem} alt=\"slider-img\"/>\r\n                    </div>\r\n                })\r\n            }\r\n            <button className={classes.prev__button} onClick={toPrev} disabled={isFinishPrev}>\r\n                <ChevronLeftIcon fontSize=\"large\"/>\r\n            </button>\r\n            <button className={classes.next__button} onClick={toNext} disabled={isFinishNext}>\r\n                <ChevronRightIcon fontSize=\"large\"/>\r\n            </button>\r\n        </div>\r\n    )\r\n}","import React, {useEffect} from 'react'\r\nimport styles from './FriendsPage.module.scss'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { AppStateType } from '../../redux/root_reducer'\r\nimport { getAllUsers } from '../../redux/users_reducer'\r\nimport UserCard from '../../components/UserCard/UserCard'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { Pagination } from '../../components/Pagination/Pagination'\r\nimport { SearchUsers } from '../../forms/SearchUsers/SearchUsers'\r\nimport { Loader } from '../../components/Loader/Loader'\r\n\r\n\r\nexport const FriendsPage = React.memo(() => {\r\n\r\n    const users = useSelector((state: AppStateType) => state.usersReducer.users)\r\n    const showUsersCount = useSelector((state: AppStateType) => state.usersReducer.showUserCount)\r\n    const pageNumber = useSelector((state: AppStateType) => state.usersReducer.currentPage)\r\n    const searchTerm = useSelector((state: AppStateType) => state.usersReducer.term)\r\n    const totalUsersCount = useSelector((state: AppStateType) => state.usersReducer.totalCount)\r\n    const isLoading = useSelector((state: AppStateType) => state.usersReducer.isLoading)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n    dispatch(getAllUsers(10, 1, '', true))\r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n    dispatch(getAllUsers(showUsersCount, pageNumber, searchTerm, true))\r\n    }, [dispatch, showUsersCount, pageNumber, searchTerm])\r\n\r\n    return (\r\n    <div className={styles.usersPage__wrapper}>\r\n\r\n        Friends\r\n\r\n        <SearchUsers />\r\n\r\n        <Pagination />\r\n\r\n        {\r\n        totalUsersCount === 0 ? <div className={styles.users__page_text}>Пользователи не найдены</div> : null\r\n        }\r\n\r\n        <div className={styles.users__page_grid}>\r\n        <Grid container spacing={3}>\r\n            { \r\n            isLoading ? <Loader /> :\r\n            users.map(user => <Grid item xs={6} sm={8} md={6} lg={6} xl={6} key={user.id} className={styles.users__card_wrapper}> \r\n                                <UserCard \r\n                                    id={user.id} \r\n                                    name={user.name}\r\n                                    status={user.status}\r\n                                    uniqueUrlName={user.uniqueUrlName}\r\n                                    followed={user.followed}\r\n                                    photo={user.photos.large}\r\n                                />\r\n                                </Grid>)\r\n            }\r\n        </Grid>\r\n        </div>\r\n    </div>\r\n    );\r\n})","import Box from '@mui/material/Box'\r\nimport Card from '@mui/material/Card'\r\nimport CardContent from '@mui/material/CardContent'\r\nimport CardMedia from '@mui/material/CardMedia'\r\nimport Typography from '@mui/material/Typography'\r\nimport { useHistory } from 'react-router'\r\nimport { ArtistsNamesType } from '../../types/music_types'\r\n\r\ntype PropsType = {\r\n    album_type: string,\r\n    name: string,\r\n    release_date: string,\r\n    total_tracks: number,\r\n    image: string,\r\n    artistsNames: Array<ArtistsNamesType>,\r\n    artistId: string\r\n}\r\n\r\n\r\nexport const NewReleaseCard: React.FC<PropsType> = ({album_type, name, release_date, total_tracks, image, artistsNames, artistId}) => {\r\n\r\n    const history = useHistory()\r\n\r\n    const showArtistPage = (id: string) => {\r\n        history.push(`/artist/${id}`)\r\n    }\r\n\r\n    return (\r\n        <Card sx={{ display: 'flex', \r\n                    backgroundColor: '#f1f1f1', \r\n                    justifyContent: 'center', \r\n                    margin: '0 auto', \r\n                    marginTop: '20px', \r\n                    color: '#414208', \r\n                    width: '600px',\r\n                    padding: '0px' }}>\r\n            <Box sx={{ display: 'flex', flexDirection: 'column' }}>\r\n                <CardContent sx={{ flex: '1 0 auto' }}>\r\n                <Typography component=\"div\" variant=\"h5\" sx={{ width: 300 }}>\r\n                    {name}\r\n                </Typography>\r\n                <Typography variant=\"subtitle1\" color=\"text.secondary\" component=\"div\">\r\n                    {album_type}\r\n                </Typography>\r\n                {\r\n                    artistsNames.map(artist => <Typography variant=\"subtitle1\"  component=\"div\" key={artist.id}>\r\n                                                <button onClick={() => showArtistPage(artist.id)} key={artist.id}>\r\n                                                    {artist.name}\r\n                                                </button>\r\n                                                </Typography>)\r\n                }\r\n                <Typography component=\"div\" variant=\"subtitle1\" sx={{ width: 300 }} color=\"text.secondary\">\r\n                    дата выхода {release_date}\r\n                </Typography>\r\n                <Typography variant=\"subtitle1\" color=\"text.secondary\" component=\"div\">\r\n                    количество треков {total_tracks}\r\n                </Typography>\r\n                </CardContent>\r\n            </Box>\r\n            <CardMedia\r\n                component=\"img\"\r\n                sx={{ width: 151 }}\r\n                image={image}\r\n                alt=\"Live from space album cover\"\r\n            />\r\n        </Card>\r\n    )\r\n}\r\n","import { InferActionsTypes, BaseThunkType } from './root_reducer'\r\nimport { musicAPI } from '../api/spotifyAPI'\r\nimport { NewReleasesDataType, ArtistDataType, AlbumType } from '../types/music_types'\r\n\r\nlet initialState = {\r\n    newReleasesData: [] as Array<NewReleasesDataType>,\r\n    error: '' as string,\r\n    categories: null as any,\r\n    isLoading: false,\r\n    artistData: null as any,\r\n    albumsData: [] as Array<AlbumType>,\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst musicReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'music/GET_NEW_RELEASES': {\r\n            return {\r\n                ...state, newReleasesData: action.releases\r\n            }\r\n        }\r\n        case 'music/CATCH_ERROR': {\r\n            return {\r\n                ...state, error: action.error\r\n            }\r\n        }\r\n        case 'music/GET_CATEGORIES': {\r\n            return {\r\n                ...state, categories: action.data\r\n            }\r\n        }\r\n        case 'music/LOAD_DATA': {\r\n            return {\r\n                ...state, isLoading: action.load\r\n            }\r\n        }\r\n        case 'music/GET_ARTIST': {\r\n            return {\r\n                ...state, artistData: action.data\r\n            }\r\n        }\r\n        case 'music/GET_ARTIST_ALBUMS': {\r\n            return {\r\n                ...state, albumsData: action.data\r\n            }\r\n        }\r\n        default: \r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const actions = {\r\n    getReleases: (releases: Array<NewReleasesDataType>) => ({type: 'music/GET_NEW_RELEASES', releases} as const),\r\n    error: (error: any) => ({type: 'music/CATCH_ERROR', error} as const),\r\n    categories: (data: any) => ({type: 'music/GET_CATEGORIES', data} as const),\r\n    loader: (load: boolean) => ({type: 'music/LOAD_DATA', load} as const),\r\n    getArtistInfo: (data: ArtistDataType) => ({type: 'music/GET_ARTIST', data} as const),\r\n    getAlbums: (data: Array<AlbumType>) => ({type: 'music/GET_ARTIST_ALBUMS', data} as const),\r\n}\r\n\r\nexport const getNewReleases = (country: string, limit: number): ThunkType => {\r\n    return async (dispatch) => {\r\n        dispatch(actions.loader(true))\r\n        let albums = await musicAPI.getNewReleases(country, limit)\r\n        try{\r\n            dispatch(actions.getReleases(albums.items))\r\n            dispatch(actions.loader(false))\r\n        } catch {\r\n            dispatch(actions.error('some error'))\r\n        }\r\n        finally {\r\n            dispatch(actions.loader(false))\r\n        }\r\n    }\r\n}\r\n\r\nexport const getCategories = (): ThunkType => {\r\n    return async (dispatch) => {\r\n        let categories = await musicAPI.getAllCategories()\r\n        try{\r\n            dispatch(actions.categories(categories.categories.items))\r\n        } catch {\r\n            dispatch(actions.error('some error'))\r\n        }\r\n    }\r\n}\r\n\r\nexport const getArtistData = (artistId: string): ThunkType => {\r\n    return async(dispatch) => {\r\n        dispatch(actions.loader(true))\r\n        let data = await musicAPI.getArtistData(artistId)\r\n        try{\r\n            dispatch(actions.getArtistInfo(data))\r\n            dispatch(actions.loader(false))\r\n        } catch {\r\n            dispatch(actions.error('some error'))\r\n        }\r\n        finally {\r\n            dispatch(actions.loader(false))\r\n        }\r\n    }\r\n}\r\n\r\nexport const getArtistAlbums = (artistId: string, offset: number, limit: number): ThunkType => {\r\n    return async(dispatch) => {\r\n        dispatch(actions.loader(true))\r\n        let data = await musicAPI.getArtistAlbums(artistId, offset, limit)\r\n        try{\r\n            dispatch(actions.getAlbums(data.items))\r\n            dispatch(actions.loader(false))\r\n        } catch {\r\n            dispatch(actions.error('some error'))\r\n        }\r\n        finally {\r\n            dispatch(actions.loader(false))\r\n        }\r\n    }\r\n}\r\n\r\nexport default musicReducer\r\n\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsType>","import { InferActionsTypes, BaseThunkType } from './root_reducer'\r\nimport { AlbumDataType } from '../types/albums_types'\r\nimport { musicAPI } from '../api/spotifyAPI'\r\n\r\nlet initialState = {\r\n    error: '',\r\n    isLoading: true,\r\n    albumData: null as AlbumDataType | null,\r\n    albumTitle: '',\r\n    albumImage: ''\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst albumReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'album/HANDLE_LOADER': {\r\n            return {\r\n                ...state, isLoading: action.loading\r\n            }\r\n        }\r\n        case 'album/CATCH_ERROR': {\r\n            return {\r\n                ...state, error: action.error\r\n            }\r\n        }\r\n        case 'album/GET_ALBUM_DATA': {\r\n            return {\r\n                ...state, albumData: action.data\r\n            }\r\n        }\r\n        case 'album/SET_ALBUM_TITLE': {\r\n            return {\r\n                ...state, albumTitle: action.title\r\n            }\r\n        }\r\n        case 'album/SET_ALBUM_IMAGE': {\r\n            return {\r\n                ...state, albumImage: action.image\r\n            }\r\n        }\r\n        default: \r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const actions = {\r\n    handleLoader: (loading: boolean) => ({type: 'album/HANDLE_LOADER', loading} as const),\r\n    catchError: (error: string) => ({type: 'album/CATCH_ERROR', error} as const),\r\n    getAlbum: (data: AlbumDataType) => ({type: 'album/GET_ALBUM_DATA', data} as const),\r\n    setTitle: (title: string) => ({type: 'album/SET_ALBUM_TITLE', title} as const),\r\n    setImage: (image: string) => ({type: 'album/SET_ALBUM_IMAGE', image} as const)\r\n}\r\n\r\nexport const getAlbumData = (albumId: string): ThunkType => {\r\n    return async(dispatch) => {\r\n        dispatch(actions.handleLoader(true))\r\n        let data = await musicAPI.getAlbumData(albumId)\r\n        try{\r\n            dispatch(actions.getAlbum(data))\r\n            dispatch(actions.handleLoader(false))\r\n        } catch {\r\n            dispatch(actions.catchError('some error'))\r\n        }\r\n        finally {\r\n            dispatch(actions.handleLoader(false))\r\n        }\r\n    }\r\n}\r\n\r\nexport const setAlbumTitle= (title: string): ThunkType => {\r\n    return async(dispatch) => {\r\n        dispatch(actions.handleLoader(true))\r\n        dispatch(actions.setTitle(title))\r\n    }\r\n}\r\n\r\nexport const setAlbumImage = (image: string): ThunkType => {\r\n    return async(dispatch) => {\r\n        dispatch(actions.handleLoader(true))\r\n        dispatch(actions.setImage(image))\r\n    }\r\n}\r\n\r\nexport default albumReducer\r\n\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsType>","import React from \"react\"\r\nimport styles from './MusicAlbumCard.module.scss'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useDispatch } from \"react-redux\"\r\nimport { setAlbumTitle, setAlbumImage } from '../../redux/album_reducer'\r\n\r\ntype PropsType = {\r\n    img?: string\r\n    name: string\r\n    albumType?: string\r\n    totalTracks?: number\r\n    releaseDate?: string\r\n    id: string\r\n    albumImg: string\r\n}\r\n\r\nexport  const MusicAlbumCard: React.FC<PropsType> = React.memo(({img, name, albumType, releaseDate, id, albumImg}) => {\r\n\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n\r\n    const showAlbum = (albumId: string) => {\r\n        dispatch(setAlbumTitle(name))\r\n        dispatch(setAlbumImage(albumImg))\r\n        history.push(`/musicAlbum/${albumId}`)\r\n    }\r\n\r\n    return (\r\n        <div className={styles.album__card_root} onClick={() => showAlbum(id)}>\r\n            <div className={styles.album__card_image}>\r\n                <img src={img} alt=\"icon\"/>\r\n            </div>\r\n            <div className={styles.album__card_title}>{name}</div>\r\n            <div>{albumType}</div>\r\n            <div>{releaseDate}</div>\r\n        </div>\r\n    )\r\n})","export default __webpack_public_path__ + \"static/media/album.aed3c198.jpg\";","import styles from './ArtistAlbums.module.scss'\r\nimport { useSelector } from 'react-redux'\r\nimport { getAlbums } from '../../redux/selectors/musicSelectors'\r\nimport { MusicAlbumCard } from '../MusicAlbumCard/MusicAlbumCard'\r\nimport { AlbumType } from '../../types/music_types'\r\nimport { LoaderTwo } from '../LoaderTwo/LoaderTwo'\r\n\r\n\r\nexport const ArtistAlbums = () => {\r\n    \r\n    const albums = useSelector(getAlbums)\r\n\r\n    return (\r\n        <div className={styles.artist__albums_root}>\r\n            <h1>Дискография</h1>\r\n            {\r\n                albums ?\r\n                <div className={styles.artist__albums_wrapper}>\r\n                    {\r\n                        albums.map((album: AlbumType) => <MusicAlbumCard \r\n                                                            img={album.images[1].url}\r\n                                                            albumImg={album.images[0].url}\r\n                                                            name={album.name}\r\n                                                            albumType={album.album_type}\r\n                                                            releaseDate={album.release_date}\r\n                                                            key={album.id}\r\n                                                            id={album.id}\r\n                        />)\r\n                    }\r\n                </div>\r\n                : <LoaderTwo />\r\n            }\r\n        </div>\r\n    )\r\n}","export const showTrackTime = (ms: number) => {\r\n    const minutes = Math.floor(ms / 60000)\r\n    const seconds = +((ms % 60000) / 1000).toFixed(0)\r\n    return minutes + \":\" + (seconds < 10 ? '0' : '') + seconds\r\n}","import { useState, useEffect } from 'react'\r\nimport styles from './MusicTrack.module.scss'\r\nimport { showTrackTime } from '../../helpers/time'\r\nimport AddIcon from '@mui/icons-material/Add'\r\nimport CheckIcon from '@mui/icons-material/Check'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { setIdOfLikedMusic, MusicEnum } from '../../redux/profile_reducer'\r\nimport { getLikedTracks } from '../../redux/selectors/musicSelectors'\r\nimport { getNotification } from '../../redux/app_reducer'\r\n\r\ntype PropsType = {\r\n    id: string\r\n    track_number: number\r\n    name: string\r\n    duration_ms: number\r\n}\r\n\r\n\r\nexport const MusicTrack: React.FC<PropsType> = ({id, track_number, name, duration_ms}) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const likedTracks = useSelector(getLikedTracks)\r\n    const [isLiked, setIsLiked] = useState(false)\r\n\r\n    const addTrackToCollection = () => {\r\n        dispatch(setIdOfLikedMusic({\r\n            name: name,\r\n            id: id,\r\n        }, MusicEnum.TRACK))\r\n        dispatch(getNotification(1, `Вы добавили трек ${name} в вашу коллекцию`))\r\n        setIsLiked(true)\r\n    }\r\n\r\n    const checkIsTrackLiked = () => {\r\n        setIsLiked(likedTracks.map(el => el.id).includes(id))\r\n    }\r\n\r\n    useEffect(() => {\r\n        checkIsTrackLiked()\r\n    }, [])\r\n\r\n    return (\r\n        <div className={isLiked ? styles.music__track_active : styles.music__track_root}>\r\n            <div>{track_number}</div>\r\n            <div className={styles.music__track_name}>{name}</div>\r\n            <div className={styles.music__track_handle} onClick={() => addTrackToCollection()}>\r\n                {\r\n                    isLiked ? <CheckIcon /> : <AddIcon />\r\n                }\r\n            </div>\r\n            <div>{showTrackTime(duration_ms)}</div>\r\n        </div>\r\n    )\r\n}","import { ProfilePage } from '../../pages/ProfilePage/ProfilePage'\r\nimport { LoginRegPage } from '../../pages/LoginRegPage/LoginRegPage'\r\nimport { UsersPage } from '../../pages/UsersPage/UsersPage'\r\nimport { HomePage } from '../../pages/HomePage/HomePage'\r\nimport { FriendsPage } from '../../pages/FriendsPage/FriendsPage'\r\nimport { NewReleasesPage } from '../../pages/NewReleasesPage/NewReleasesPage'\r\nimport { MusicFindPage } from '../../pages/MusicFindPage/MusicFindPage'\r\nimport { ArtistPage } from '../../pages/ArtistPage/ArtistPage'\r\nimport { AlbumPage } from '../../pages/AlbumPage/AlbumPage'\r\n\r\nimport {\r\n    USERS_ROUTE,\r\n    LOGIN_ROUTE,\r\n    MAIN_ROUTE,\r\n    USER_PROFILE_ROUTE,\r\n    FRIENDS_ROUTE,\r\n    NEW_RELEASES_ROUTE,\r\n    MUSIC_FIND_ROUTE,\r\n    ARTIST_PAGE_ROUTE,\r\n    MUSIC_ALBUM_PAGE\r\n} from './constants'\r\n\r\nexport const authRoutes = [\r\n    {\r\n        path: FRIENDS_ROUTE,\r\n        Component: FriendsPage\r\n    },\r\n    \r\n];\r\n\r\nexport const publicRoutes = [\r\n    {\r\n        path: USERS_ROUTE,\r\n        Component: UsersPage\r\n    },\r\n    {\r\n        path: LOGIN_ROUTE,\r\n        Component: LoginRegPage\r\n    },\r\n    {\r\n        path: MAIN_ROUTE,\r\n        Component: HomePage\r\n    },\r\n    {\r\n        path: USER_PROFILE_ROUTE,\r\n        Component: ProfilePage\r\n    },\r\n    {\r\n        path: NEW_RELEASES_ROUTE,\r\n        Component: NewReleasesPage\r\n    },\r\n    {\r\n        path: MUSIC_FIND_ROUTE,\r\n        Component: MusicFindPage\r\n    },\r\n    {\r\n        path: ARTIST_PAGE_ROUTE,\r\n        Component: ArtistPage\r\n    },\r\n    {\r\n        path: MUSIC_ALBUM_PAGE,\r\n        Component: AlbumPage\r\n    }\r\n];","export const USERS_ROUTE = '/users'\r\nexport const LOGIN_ROUTE = '/login'\r\nexport const MAIN_ROUTE = '/'\r\nexport const USER_PROFILE_ROUTE = '/profile/:userId'\r\nexport const FRIENDS_ROUTE = '/friends'\r\nexport const NEW_RELEASES_ROUTE = '/new_releases'\r\nexport const MUSIC_FIND_ROUTE = '/musicFind'\r\nexport const ARTIST_PAGE_ROUTE = '/artist/:artistId'\r\nexport const MUSIC_ALBUM_PAGE = '/musicAlbum/:albumId'","import { useEffect, useState } from 'react'\r\nimport styles from './LoginPage.module.scss'\r\nimport { LoginRegForm } from '../../forms/LoginRegForm/LoginRegForm'\r\nimport { toggleFormType } from '../../redux/app_reducer'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { EntryFormType } from '../../types/auth_types'\r\nimport { isUserAuth, getUserId, fetchError, getRegMessage } from '../../redux/selectors/authSelectors'\r\nimport { getFormType } from '../../redux/selectors/appSelectors'\r\n\r\n\r\nexport const LoginRegPage = () => {\r\n\r\n    const isAuth = useSelector(isUserAuth)\r\n    const userId = useSelector(getUserId)\r\n    const formType = useSelector(getFormType)\r\n    const error = useSelector(fetchError)\r\n    const registrationMessage = useSelector(getRegMessage)\r\n    const dispatch = useDispatch()\r\n    const [type, setType] = useState<string>(formType)\r\n    const [loginError, setLoginError] = useState<string | null>(null)\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        if(isAuth && userId) {\r\n            history.push(`/profile/${userId}`)\r\n        }\r\n    }, [isAuth, userId, history])\r\n\r\n    useEffect(() => {\r\n        if(registrationMessage) {\r\n            return alert(registrationMessage)\r\n        }\r\n    }, [registrationMessage])\r\n\r\n    useEffect(() => {\r\n        if(error) {\r\n            setLoginError(error)\r\n        }\r\n    }, [error])\r\n\r\n    const changeFormType = (type: EntryFormType) => {\r\n        setType(type)\r\n        dispatch(toggleFormType(type))\r\n        setLoginError(null)\r\n    }\r\n\r\n    return (\r\n        <div className={styles.login__page_root}>\r\n            {\r\n                loginError && <div className={styles.login_page_error}>{loginError}</div>\r\n            }\r\n\r\n            <LoginRegForm />\r\n            {\r\n                type === 'login' ? \r\n                    <div className={styles.registration__link}>\r\n                        Впервые на сайте?\r\n                        Моментальная \r\n                        <button onClick={() => changeFormType('registration')}>регистрация</button>\r\n                    </div>\r\n                : <div className={styles.registration__link}>\r\n                    Есть аккаунт?\r\n                    <button onClick={() => changeFormType('login')}>Вход</button>\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}","import { useEffect } from 'react'\r\nimport { GhostAnimation } from '../../components/GhostAnimation/GhostAnimation'\r\nimport styles from './HomePage.module.scss'\r\nimport Button from '@mui/material/Button'\r\nimport { useHistory } from 'react-router'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { isUserAuth } from '../../redux/selectors/authSelectors'\r\nimport { getMusicGenres } from '../../redux/genres_reducer'\r\nimport { Slider } from '../../components/Slider/Slider'\r\n\r\nexport const HomePage = () => {\r\n\r\n    const history = useHistory()\r\n    const userAuth = useSelector(isUserAuth)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(getMusicGenres())\r\n    }, [dispatch])\r\n\r\n    const toNewReleases = () => {\r\n        if(userAuth) {\r\n            history.push('/new_releases')\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={styles.home__page_root}>\r\n            <div className={styles.home__page_slider}>\r\n                <Slider />\r\n            </div>\r\n            <div className={styles.home__page_main}>\r\n                <div className={styles.home__page_text}>\r\n                    <h1>Не знаете, что послушать?</h1>\r\n                    <div>\r\n                        Начните с лучших новинок.\r\n                    </div>\r\n                </div>\r\n                <div className={styles.home__button_news}>\r\n                    <Button variant=\"contained\" onClick={() => toNewReleases()}>Перейти к новинкам</Button>\r\n                </div>\r\n                <div className={styles.home__animation_block}>\r\n                    <GhostAnimation /> \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { useEffect, useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useHistory } from 'react-router'\r\nimport styles from './ProfilePage.module.scss'\r\nimport { MusicData, deleteMusicInCollection, DELETE_MUSIC_ENUM } from '../../redux/profile_reducer'\r\nimport Tabs from '@mui/material/Tabs'\r\nimport Tab from '@mui/material/Tab'\r\nimport Box from '@mui/material/Box'\r\nimport { isUserAuth, getLoading } from '../../redux/selectors/authSelectors'\r\nimport { TabPanel } from '../../components/Tabs/TabPanel/TabPanel'\r\nimport { getArtistsNames, getLikedAlbums, getLikedTracks } from '../../redux/selectors/musicSelectors'\r\nimport HighlightOffIcon from '@mui/icons-material/HighlightOff'\r\nimport { LoaderTwo } from '../../components/LoaderTwo/LoaderTwo'\r\n\r\n\r\nexport const ProfilePage = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const userAuth = useSelector(isUserAuth)\r\n    const artistsData = useSelector(getArtistsNames)\r\n    const albumsData = useSelector(getLikedAlbums)\r\n    const tracksData = useSelector(getLikedTracks)\r\n    const isLoadingProfile = useSelector(getLoading)\r\n    const [value, setValue] = useState(0)\r\n    const history = useHistory()\r\n\r\n    const handleChange = (event: React.SyntheticEvent, newValue: number) => {\r\n        setValue(newValue)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(!userAuth) {\r\n            history.push('/')\r\n        }\r\n    })\r\n\r\n    const toArtistPage = (id: string) => {\r\n        history.push(`/artist/${id}`)\r\n    }\r\n\r\n    const deleteArtistInCollection = (artistId: string, type: DELETE_MUSIC_ENUM) => {\r\n        dispatch(deleteMusicInCollection(artistId, type))\r\n    }\r\n\r\n    const toNewRelisesPage = () => {\r\n        history.push('/new_releases')\r\n    }\r\n\r\n    return (\r\n        <div className={styles.profile__page_root}> \r\n            {\r\n                isLoadingProfile ? <div className={styles.profile__page_loader}><LoaderTwo /></div>\r\n                :\r\n                <>\r\n                    <div className={styles.profile__page_title}>\r\n                        <h1>Ваша коллекция музыки</h1>\r\n                    </div>\r\n                    <div className={styles.profile__page_tabs}>\r\n                        <Box sx={{ width: '100%', color: 'white' }}>\r\n                        <Box sx={{ borderBottom: 1, borderColor: 'divider', color: 'white' }}>\r\n                            <Tabs value={value} onChange={handleChange} aria-label=\"basic tabs example\">\r\n                            <Tab label=\"Артисты\" />\r\n                            <Tab label=\"Альбомы\"  />\r\n                            <Tab label=\"Треки\"  />\r\n                            </Tabs>\r\n                        </Box>\r\n                        <TabPanel value={value} index={0}>\r\n                            <>\r\n                            Артисты\r\n                            {\r\n                                artistsData.length ? artistsData.map((data: MusicData) => <div key={data.id} className={styles.profile__page_artists}>\r\n                                    <button onClick={() => toArtistPage(data.id)}>{data.name}</button>\r\n                                    <div className={styles.artist__image}>\r\n                                        <img src={data.image} alt=\"artist\"/>\r\n                                    </div>\r\n                                    <button onClick={() => deleteArtistInCollection(data.id, DELETE_MUSIC_ENUM.ARTIST)}>\r\n                                        <HighlightOffIcon />\r\n                                    </button>\r\n                                </div>)\r\n                                : \r\n                                <div className={styles.profile__page_empty}>\r\n                                    Ваша коллекция пуста\r\n                                    <button onClick={() => toNewRelisesPage()}>Новые релизы</button>\r\n                                </div>\r\n                            }\r\n                            </>\r\n                        </TabPanel>\r\n                        <TabPanel value={value} index={1}>\r\n                            <>\r\n                            Альбомы\r\n                            {\r\n                                albumsData.length ? albumsData.map((data: MusicData) => <div key={data.id} className={styles.profile__page_artists}>\r\n                                    <button onClick={() => toArtistPage(data.id)}>{data.name}</button>\r\n                                    <div className={styles.artist__image}>\r\n                                        <img src={data.image} alt=\"album\"/>\r\n                                    </div>\r\n                                    <button onClick={() => deleteArtistInCollection(data.id, DELETE_MUSIC_ENUM.ALBUM)}>\r\n                                        <HighlightOffIcon />\r\n                                    </button>\r\n                                </div>)\r\n                                : \r\n                                <div className={styles.profile__page_empty}>\r\n                                    Ваша коллекция пуста\r\n                                    <button onClick={() => toNewRelisesPage()}>Новые релизы</button>\r\n                                </div>\r\n                            }\r\n                            </>\r\n                        </TabPanel>\r\n                        <TabPanel value={value} index={2}>\r\n                            <>\r\n                            Треки\r\n                            {\r\n                                tracksData.length ? tracksData.map((data: MusicData) => <div key={data.id} className={styles.profile__page_tracks}>\r\n                                    <button onClick={() => toArtistPage(data.id)}>{data.name}</button>\r\n                                    <button onClick={() => deleteArtistInCollection(data.id, DELETE_MUSIC_ENUM.TRACK)}>\r\n                                        <HighlightOffIcon />\r\n                                    </button>\r\n                                </div>)\r\n                                : \r\n                                <div className={styles.profile__page_empty}>\r\n                                    Ваша коллекция пуста\r\n                                    <button onClick={() => toNewRelisesPage()}>Новые релизы</button>\r\n                                </div>\r\n                            }\r\n                            </>\r\n                        </TabPanel>\r\n                        </Box>\r\n                    </div>\r\n                </>\r\n            }\r\n        </div>\r\n    )\r\n}","import { useState, useEffect} from 'react'\r\nimport styles from './NewReleases.module.scss'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useSelector } from 'react-redux'\r\nimport { NewReleaseCard } from '../../components/NewReleaseCard/NewReleaseCard'\r\nimport { getNewReleases } from '../../redux/music_reducer'\r\nimport { LoaderTwo } from '../../components/LoaderTwo/LoaderTwo'\r\nimport { fetchNewReleases, getLoading } from '../../redux/selectors/musicSelectors'\r\n\r\n\r\nexport const NewReleasesPage = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const releases = useSelector(fetchNewReleases)\r\n    const isLoading = useSelector(getLoading)\r\n    const [country, setCountry] = useState<string>('US')\r\n    const [countAlbum, setAlbumCount] = useState<number>(5)\r\n\r\n    useEffect(() => {\r\n        dispatch(getNewReleases(country, countAlbum))\r\n    }, [country, countAlbum, dispatch])\r\n\r\n    const selectCountry = (event: React.ChangeEvent<HTMLSelectElement>) => {\r\n        const value = event.target.value\r\n        setCountry(value)\r\n        dispatch(getNewReleases(value, countAlbum ))\r\n    }\r\n\r\n    const selectAlbumCount = (event: React.ChangeEvent<HTMLSelectElement>) => {\r\n        const value = event.target.value\r\n        setAlbumCount(+value)\r\n        dispatch(getNewReleases(country, +value))\r\n    }\r\n\r\n    return (\r\n        <div className={styles.new__releases_root}>\r\n            <h1>Новые релизы</h1>\r\n            <div className={styles.new__releases_select}>\r\n                Новые релизы в стране \r\n                    <select name=\"country\" onChange={selectCountry}>\r\n                        <option value=\"US\">USA</option>\r\n                        <option value=\"RU\">Russia</option>\r\n                        <option value=\"UA\">Ukraine</option>\r\n                        <option value=\"BY\">Belarus</option>\r\n                    </select>\r\n            </div>\r\n            <div className={styles.new__releases_select}>\r\n                Показывать по   \r\n                    <select name=\"albumCount\" onChange={selectAlbumCount}>\r\n                        <option value=\"5\">5</option>\r\n                        <option value=\"10\">10</option>\r\n                        <option value=\"20\">20</option>\r\n                        <option value=\"50\">50</option>\r\n                    </select>\r\n                новых релизов\r\n            </div>\r\n\r\n            <>\r\n                {\r\n                    releases ? \r\n                    <>\r\n                        {\r\n                        releases.map((release: any) => <div key={release.id}>\r\n                            <NewReleaseCard \r\n                            album_type={release.album_type}\r\n                            name={release.name}\r\n                            release_date={release.release_date}\r\n                            total_tracks={release.total_tracks}\r\n                            image={release.images[0].url}\r\n                            artistsNames={release.artists}\r\n                            artistId={release.artists[0].id}\r\n                        /></div>) \r\n                        }\r\n                    </>\r\n                    :\r\n                    <LoaderTwo />\r\n                }\r\n            </>\r\n        </div>\r\n    )\r\n}","import styles from './MusicFindPage.module.scss'\r\nimport { useSelector } from 'react-redux'\r\nimport { albumsSearchResponse, artistsSearchResponse, tracksSearchResponse } from '../../redux/selectors/musicSelectors'\r\n//import { LoaderTwo } from '../../components/LoaderTwo/LoaderTwo'\r\nimport { MusicAlbumCard } from '../../components/MusicAlbumCard/MusicAlbumCard'\r\nimport { ArtistsType } from '../../types/artists_types'\r\nimport { AlbumsSearchType } from '../../types/albums_types'\r\nimport { TracksType } from '../../types/tracks_types'\r\nimport AlbumIcon from '../../img/album.jpg'\r\n\r\n\r\nexport const MusicFindPage = () => {\r\n\r\n    const albums = useSelector(albumsSearchResponse)\r\n    const artists = useSelector(artistsSearchResponse)\r\n    const tracks = useSelector(tracksSearchResponse)\r\n\r\n    return (\r\n        <div className={styles.find__page_root}>\r\n            <div className={styles.find__page_albums}>\r\n                <h2>Альбомы</h2>\r\n                <div className={styles.find__albums_wrapper}>\r\n                    {\r\n                    albums ? albums.map((item: AlbumsSearchType) => <MusicAlbumCard \r\n                                                            name={item.name}\r\n                                                            id={item.id}\r\n                                                            img={item.images[1] ? item.images[1].url : AlbumIcon}\r\n                                                            albumImg={item.images[1] ? item.images[1].url : AlbumIcon}\r\n                                                            key={item.id}\r\n                                                        />)\r\n                    :\r\n                    <div>Данные отсутствуют, либо измените параметры поиска</div>\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className={styles.find__page_artists}>\r\n                <h2>Артисты</h2>\r\n                <div className={styles.find__artists_wrapper}>\r\n                    {\r\n                        artists ? artists.map((item: ArtistsType) => <MusicAlbumCard \r\n                                                                name={item.name}\r\n                                                                id={item.id}\r\n                                                                img={item.images[1] ? item.images[1].url : AlbumIcon}\r\n                                                                albumImg={item.images[1] ? item.images[1].url : AlbumIcon}\r\n                                                                key={item.id}\r\n                                                            />)\r\n                        :\r\n                        <div>Данные отсутствуют, либо измените параметры поиска</div>\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className={styles.find__page_tracks}>\r\n                <h2>Треки</h2>\r\n                <div className={styles.find__tracks_wrapper}>\r\n                    {\r\n                    tracks ? tracks.map((item: TracksType) => <MusicAlbumCard \r\n                                                            name={item.name}\r\n                                                            id={item.id}\r\n                                                            img={item.album.images[1] ?  item.album.images[1].url : AlbumIcon}\r\n                                                            albumImg={item.album.images[1] ?  item.album.images[1].url : AlbumIcon}\r\n                                                            key={item.id}\r\n                                                        />)\r\n                    :\r\n                    <div>Данные отсутствуют, либо измените параметры поиска</div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { useEffect, useState } from 'react'\r\nimport styles from './ArtistPage.module.scss'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { LoaderTwo } from '../../components/LoaderTwo/LoaderTwo'\r\nimport Chip from '@mui/material/Chip'\r\nimport Stack from '@mui/material/Stack'\r\nimport FavoriteIcon from '@material-ui/icons/Favorite'\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder'\r\nimport { ArtistAlbums } from '../../components/ArtistAlbums/ArtistAlbums'\r\nimport { fetchArtistData, getLoading } from '../../redux/selectors/musicSelectors'\r\nimport { getArtistData, getArtistAlbums } from '../../redux/music_reducer'\r\nimport { useParams } from 'react-router-dom'\r\nimport { setIdOfLikedMusic, MusicData } from '../../redux/profile_reducer'\r\nimport { MusicEnum } from '../../redux/profile_reducer'\r\nimport { getNotification } from '../../redux/app_reducer'\r\n\r\ninterface RouteParams {\r\n    artistId: string\r\n}\r\n\r\n\r\nexport const ArtistPage = () => {\r\n\r\n    const params = useParams<RouteParams>()\r\n    const {artistId} = params\r\n\r\n    const artistData = useSelector(fetchArtistData)\r\n    const isLoading = useSelector(getLoading)\r\n    const [isLikeArtist, setIsLikeArtist] = useState(false)\r\n    const [data, setData] = useState<MusicData | null>(null)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(getArtistData(artistId))\r\n    }, [dispatch, artistId])\r\n\r\n    useEffect(() => {\r\n        dispatch(getArtistAlbums(artistId, 0, 5))\r\n        if(artistData && artistId) {\r\n            setData({name: artistData.name, id: artistId, image: artistData.images[1].url})\r\n        }\r\n    }, [dispatch, artistId, artistData])\r\n\r\n    const likeArtist = () => {\r\n        setIsLikeArtist(!isLikeArtist)\r\n        if(data) {\r\n            dispatch(setIdOfLikedMusic(data, MusicEnum.ARTIST))\r\n            dispatch(getNotification(1, `Артист ${data.name} добавлен в коллекцию`))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={styles.artist__page_root}>\r\n            {\r\n                artistData ? \r\n                <>\r\n                    <div>\r\n                        <h1>{artistData.name}</h1>\r\n                    </div>\r\n                    <div className={styles.artist__main_icon}>\r\n                        <img src={artistData.images[1].url} alt=\"artist\"/>\r\n                    </div>\r\n                    <div className={styles.artists__total_likes}>\r\n                        <div onClick={() => likeArtist()} className={styles.artist__like_icon}>\r\n                            {\r\n                                isLikeArtist ? <FavoriteIcon color=\"error\" fontSize=\"large\"/> : <FavoriteBorderIcon color=\"error\" fontSize=\"large\"/>\r\n                            }\r\n                        </div>\r\n                        <>{artistData.followers.total}</>\r\n                    </div>\r\n                    <div className={styles.artists__genres_list}>\r\n                        {\r\n                            <Stack direction=\"row\" spacing={1}>\r\n                             { artistData.genres.map((genre: string) => <Chip label={genre} key={genre} className={styles.genre}/>) }\r\n                            </Stack>\r\n                        }\r\n                    </div>\r\n                </>\r\n                : \r\n                <LoaderTwo />\r\n            }\r\n            <div>\r\n                {\r\n                    isLoading ? <LoaderTwo /> : <ArtistAlbums />\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { useEffect, useState, useCallback } from 'react'\r\nimport  styles from './AlbumPage.module.scss'\r\nimport { useParams } from 'react-router'\r\nimport { getAlbumData } from '../../redux/album_reducer'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getAlbum, getAlbumTitle, getAlbumImage } from '../../redux/selectors/musicSelectors'\r\nimport { AlbumItemType } from '../../types/albums_types'\r\nimport Button from '@mui/material/Button'\r\nimport { LoaderTwo } from '../../components/LoaderTwo/LoaderTwo'\r\nimport AddIcon from '@mui/icons-material/Add'\r\nimport CheckIcon from '@mui/icons-material/Check'\r\nimport { MusicEnum, setIdOfLikedMusic } from '../../redux/profile_reducer'\r\nimport { getNotification } from '../../redux/app_reducer'\r\nimport { MusicTrack } from '../../components/MusicTrack/MusicTrack'\r\n\r\ninterface RouteParams {\r\n    albumId: string\r\n}\r\n\r\n\r\nexport const AlbumPage = () => {\r\n\r\n    const params = useParams<RouteParams>()\r\n    const {albumId} = params\r\n    const dispatch = useDispatch()\r\n    const album = useSelector(getAlbum)\r\n    const title = useSelector(getAlbumTitle)\r\n    const [addAlbum, setAddAlbum] = useState(false)\r\n    const [savedTitle, setSavedTitle] = useState(title)\r\n    const albumImage = useSelector(getAlbumImage)\r\n    const [savedAlbumImage, setSavedAlbumImage] = useState(albumImage)\r\n    const [totalTime, setTotalTime] = useState(0)\r\n    const [time, setTime] = useState<Array<number>>([])\r\n    const [tracks, setTracks] = useState<Array<AlbumItemType> | null>(null)\r\n    const [tracksLimitTime, setTracksLimitTime] = useState('')\r\n    const [timeAlert, setTimeAlert] = useState(false)\r\n\r\n    enum SortTypes {\r\n        Long = 'Long',\r\n        Short = 'Short',\r\n        Cancel = 'Cancel'\r\n    }\r\n    const[typeSort, setTypeSort] = useState<SortTypes>(SortTypes.Cancel)\r\n\r\n    const getTotalTracksTime = useCallback((items: Array<AlbumItemType>) => {\r\n        setTime(items.map((item: AlbumItemType) => time.push(item.duration_ms)))\r\n        setTotalTime(Math.round(time.reduce((sum: number, current: number) => sum + current, 0) / 1000 / 60))\r\n    }, [time])\r\n\r\n    useEffect(() => {\r\n        dispatch(getAlbumData(albumId))\r\n    }, [albumId, dispatch])\r\n\r\n    useEffect(() => {\r\n        if(album && title && albumImage) {\r\n            setTracks(album.items)\r\n            getTotalTracksTime(album.items)\r\n            setSavedTitle(title)\r\n            setSavedAlbumImage(albumImage)\r\n        }\r\n    }, [album, title, albumImage])\r\n\r\n    const sortTracks = (typeSort: SortTypes) => {\r\n        switch (typeSort) {\r\n            case SortTypes.Cancel: \r\n                setTracks(tracks && tracks.sort((a, b) => a.track_number > b.track_number ? 1 : -1))\r\n                setTypeSort(SortTypes.Cancel)\r\n                break\r\n            case SortTypes.Long: \r\n                setTracks(tracks && tracks.sort((a, b) => a.duration_ms < b.duration_ms ? 1 : -1))\r\n                setTypeSort(SortTypes.Long)\r\n                break\r\n            case SortTypes.Short: \r\n                setTracks(tracks && tracks.sort((a, b) => a.duration_ms > b.duration_ms ? 1 : -1))\r\n                setTypeSort(SortTypes.Short)\r\n                break\r\n          }\r\n    }\r\n\r\n    const addToColliction = () => {\r\n        dispatch(setIdOfLikedMusic(\r\n            {name: title,\r\n            id: albumId,\r\n            image: albumImage}, \r\n            MusicEnum.ALBUM))\r\n        dispatch(getNotification(1, `Альбом ${title} добавлен в коллекцию`))\r\n        setAddAlbum(true)\r\n    }\r\n\r\n    const handleChangeInput = (event: React.FormEvent<HTMLInputElement>) => {\r\n        let value = event.currentTarget.value\r\n        setTracksLimitTime(value)\r\n    }\r\n\r\n    const handleLimitTime = (tracksLimitTime: number, tracks: Array<AlbumItemType>) => {\r\n        let allTracksTime = tracks.map(el => el.duration_ms).reduce((sum, current) => sum + current, 0)\r\n        let limitMs = tracksLimitTime * 60000\r\n        if(allTracksTime > limitMs) {\r\n            setTracks(tracks.slice(0, -1))\r\n        }\r\n    }\r\n\r\n    useEffect(() => { \r\n        if(tracks && +tracksLimitTime > 5) {\r\n            handleLimitTime(+tracksLimitTime, tracks)\r\n        } else if (album && +tracksLimitTime === 0) {\r\n            setTracks(album.items)\r\n        } \r\n    }, [tracksLimitTime, tracks, album])\r\n\r\n    return (\r\n        <div className={styles.album__page_root}>\r\n            <div className={styles.album__page_header}>\r\n                <h1>{savedTitle}</h1>\r\n                <div className={styles.album__page_time}>Продолжительность альбома {totalTime} минут</div>\r\n                <img src={savedAlbumImage} alt=\"album\"/>\r\n                <div className={styles.album__add_icon}>\r\n                    {\r\n                        addAlbum ? <div className={styles.album__add_text}>\r\n                                    <CheckIcon fontSize=\"large\"/>\r\n                                    </div>\r\n                        : \r\n                        <div className={styles.album__add_text} onClick={() => addToColliction()}>\r\n                            <AddIcon fontSize=\"large\"/> \r\n                            добавить в коллекцию\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className={styles.album__page_buttons}>\r\n                <h3>Сортировать треки</h3>\r\n                <Button variant=\"outlined\" onClick={() => sortTracks(SortTypes.Long)}>Сначала долгие</Button>\r\n                <Button variant=\"outlined\" onClick={() => sortTracks(SortTypes.Short)}>Начать с коротких</Button>\r\n                <Button variant=\"outlined\"onClick={() => sortTracks(SortTypes.Cancel)}>Как задумал автор</Button>\r\n            </div>\r\n            <div className={styles.album__page_limit}>\r\n                {\r\n                    tracks && <> У вас мало свободного времени? Укажите, сколько минут вы готовы уделить этому альбому, \r\n                                    и мы проиграем только необходимое количество треков\r\n                                { timeAlert && <div>Времени достаточно, чтобы послушать и другие альбомы!</div>}\r\n                                <input  value={tracksLimitTime} onChange={(e) => handleChangeInput(e)}/>\r\n                                </>\r\n                }\r\n            </div>\r\n            <div className={styles.album__page_tracks}>\r\n                {\r\n                    tracks ? tracks.map((item: AlbumItemType) => <MusicTrack \r\n                                                                    id={item.id}\r\n                                                                    name={item.name}\r\n                                                                    duration_ms={item.duration_ms}\r\n                                                                    track_number={item.track_number}\r\n                                                                    key={item.id} \r\n                    />)\r\n                    : <div className={styles.album__page_loader}>\r\n                        <LoaderTwo />\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","import {useSelector} from 'react-redux'\r\nimport { AppStateType } from '../../redux/root_reducer'\r\nimport {Switch, Route} from 'react-router-dom'\r\nimport {authRoutes, publicRoutes} from './routes'\r\n\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const isAuth = useSelector((state: AppStateType) => state.authReducer.isAuth)\r\n\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                {\r\n                    isAuth && authRoutes.map(({path, Component}) => <Route key={path} path={path} component={Component} exact/>)\r\n                }\r\n                {\r\n                    publicRoutes.map(({path, Component}) => <Route key={path} path={path} component={Component} exact/>)\r\n                }\r\n                <Route path='*' render={() => <div style={{marginTop: '100px', display: 'flex', justifyContent: 'center', color: 'red', fontWeight: 'bold'}}>\r\n                    404 NOT FOUND\r\n                    </div>}\r\n                />\r\n            </Switch>\r\n        </div>\r\n    )\r\n}","\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useWindowScroll } from 'react-use'\r\nimport styles from './ScrollToTop.module.scss'\r\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess'\r\n\r\n\r\nexport const ScrollToTop = () => {\r\n\r\n    const { y: pageYOffset } = useWindowScroll()\r\n    const [visible, setVisible] = useState(true)\r\n\r\n    useEffect(() => {\r\n        if(pageYOffset > 400) {\r\n            setVisible(true);\r\n        } else {\r\n            setVisible(false);\r\n        }\r\n    }, [pageYOffset])\r\n\r\n    const scroll = () => window.scrollTo({top: 0, behavior: \"smooth\"})\r\n    \r\n    return (\r\n        <div className={visible ? styles.toTopButton : styles.not_visible}>\r\n            <ExpandLessIcon   fontSize=\"large\" onClick={scroll}/>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { useWindowScroll } from 'react-use'\r\nimport styles from './ScrollToBottom.module.scss'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\n\r\n\r\nexport const ScrollToBottom = () => {\r\n\r\n    const { y: pageYOffset } = useWindowScroll()\r\n    const [visible, setVisible] = useState(true)\r\n\r\n    useEffect(() => {\r\n        if(pageYOffset > 400) {\r\n            setVisible(false)\r\n        } else {\r\n            setVisible(true)\r\n        }\r\n    }, [pageYOffset])\r\n\r\n    const scroll = () => window.scrollTo({ \r\n        top: document.documentElement.scrollHeight, \r\n        behavior: 'smooth'})\r\n\r\n    return (\r\n        <div className={visible ? styles.toBottomButton : styles.not_visible}>\r\n            <ExpandMoreIcon fontSize=\"large\" onClick={scroll}/>\r\n        </div>\r\n    )\r\n}","import { useEffect } from 'react'\nimport { HashRouter } from 'react-router-dom'\nimport styles from './App.module.scss'\nimport Header from './components/Header/Header'\nimport { AppStateType } from './redux/root_reducer'\nimport { useSelector } from 'react-redux'\nimport { useDispatch } from 'react-redux'\nimport { getOwnUserData } from './redux/auth_reducer'\nimport { AppRouter  } from './components/AppRouter/AppRouter'\nimport { ScrollToTop } from './components/Buttons/ScroollToTop/ScrollToTop'\nimport { ScrollToBottom } from './components/Buttons/ScrollToBottom/ScrollToBottom'\n\n\nfunction App() {\n\n  const dispatch = useDispatch()\n  const userId = useSelector((state: AppStateType) => state.authReducer.userId)\n\n  useEffect(() => {\n    if(userId) {\n      dispatch(getOwnUserData())\n    } \n  }, [userId, dispatch])\n\n  return (\n    <div className={styles.app__wrapper}>\n      <HashRouter>\n        <Header />\n        <AppRouter />\n        <ScrollToBottom />\n        <ScrollToTop />\n      </HashRouter>\n    </div>\n  )\n}\n\nexport default App","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { InferActionsTypes, BaseThunkType } from './root_reducer'\r\nimport { AlbumType } from '../types/music_types'\r\nimport { AlbumDataType } from '../types/albums_types'\r\nimport { musicAPI } from '../api/spotifyAPI'\r\n\r\nlet initialState = {\r\n    error: '' as string,\r\n    isLoading: true,\r\n    albumsData: [] as Array<AlbumType>,\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst musicReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'artist/HANDLE_LOADER': {\r\n            return {\r\n                ...state, isLoading: action.loading\r\n            }\r\n        }\r\n        case 'artist/CATCH_ERROR': {\r\n            return {\r\n                ...state, error: action.error\r\n            }\r\n        }\r\n        default: \r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const actions = {\r\n    handleLoader: (loading: boolean) => ({type: 'artist/HANDLE_LOADER', loading} as const),\r\n    catchError: (error: string) => ({type: 'artist/CATCH_ERROR', error} as const),\r\n    getAlbum: (data: AlbumDataType) => ({type: 'artist/GET_ALBUM_DATA', data} as const),\r\n}\r\n\r\nexport const getAlbumData = (albumId: string): ThunkType => {\r\n    return async(dispatch) => {\r\n        dispatch(actions.handleLoader(true))\r\n        let data = await musicAPI.getAlbumData(albumId)\r\n        try{\r\n            dispatch(actions.getAlbum(data))\r\n            dispatch(actions.handleLoader(false))\r\n        } catch {\r\n            dispatch(actions.catchError('some error'))\r\n        }\r\n        finally {\r\n            dispatch(actions.handleLoader(false))\r\n        }\r\n    }\r\n}\r\n\r\nexport default musicReducer\r\n\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsType>","\r\nimport {Action, createStore, combineReducers, applyMiddleware, compose} from 'redux'\r\nimport app_reducer from './app_reducer'\r\nimport auth_reducer from './auth_reducer'\r\nimport profile_reducer from './profile_reducer'\r\nimport users_reducer from './users_reducer'\r\nimport music_reducer from './music_reducer'\r\nimport artist_reducer from './artist_reducer'\r\nimport album_reducer from './album_reducer'\r\nimport genres_reducer from './genres_reducer'\r\nimport search_reducer from './music_search'\r\nimport thunkMiddleware, { ThunkAction } from 'redux-thunk'\r\n\r\nlet rootReducer = combineReducers({\r\n    appReducer: app_reducer,\r\n    authReducer: auth_reducer,\r\n    profileReducer: profile_reducer,\r\n    usersReducer: users_reducer,\r\n    musicReducer: music_reducer,\r\n    artistReducer: artist_reducer,\r\n    albumReducer: album_reducer,\r\n    genresReducer: genres_reducer,\r\n    searchReducer: search_reducer\r\n});\r\n\r\ntype RootState = typeof rootReducer\r\nexport type AppStateType = ReturnType<RootState>\r\nexport type InferActionsTypes<T> = T extends { [keys: string]: (...args: any[]) => infer U } ? U : never\r\nexport type BaseThunkType<A extends Action = Action, R = Promise<void>> = ThunkAction<R, AppStateType, unknown, A>\r\n\r\n//@ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nlet store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)))\r\n\r\n//@ts-ignore\r\nwindow.__store__ = store\r\n\r\nexport default store","import ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport {Provider} from 'react-redux'\nimport store from './redux/root_reducer'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\nreportWebVitals()","// extracted by mini-css-extract-plugin\nmodule.exports = {\"album__page_root\":\"AlbumPage_album__page_root__1ZCO7\",\"album__page_buttons\":\"AlbumPage_album__page_buttons__3otuT\",\"album__page_header\":\"AlbumPage_album__page_header__6QZW8\",\"album__page_tracks\":\"AlbumPage_album__page_tracks__Vk7vy\",\"album__info_track\":\"AlbumPage_album__info_track__3ZfBz\",\"album__page_loader\":\"AlbumPage_album__page_loader__E2Ci0\",\"album__add_icon\":\"AlbumPage_album__add_icon__1VpFR\",\"album__add_text\":\"AlbumPage_album__add_text__xihym\",\"album__page_time\":\"AlbumPage_album__page_time__3H4QJ\",\"album__add_track\":\"AlbumPage_album__add_track__1lQck\",\"album__page_limit\":\"AlbumPage_album__page_limit__2qlGe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination__root\":\"Pagination_pagination__root__2O1Xl\",\"pagination__select\":\"Pagination_pagination__select__1DDU8\",\"pagination__list\":\"Pagination_pagination__list__29fP9\",\"pagination__list_active\":\"Pagination_pagination__list_active__1kp-Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login__form_wrapper\":\"Login_login__form_wrapper__17lag\",\"form__remember_me\":\"Login_form__remember_me__35k0n\",\"form__inputs\":\"Login_form__inputs__3XhW1\",\"captcha__root\":\"Login_captcha__root__1I-4Z\",\"captcha\":\"Login_captcha__3h5I6\",\"email__errors\":\"Login_email__errors__AqbCk\",\"password__errors\":\"Login_password__errors__6LvXC\",\"remember_me_text\":\"Login_remember_me_text__5bEaT\",\"remember__me_checkbox\":\"Login_remember__me_checkbox__3dm7o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header__container\":\"Header_header__container__h3SGz\",\"header__wrapper\":\"Header_header__wrapper__1mGDp\",\"header__left_block\":\"Header_header__left_block__Sw6dH\",\"header__logo\":\"Header_header__logo__3qAxH\",\"header__search_input\":\"Header_header__search_input__1F4Ou\",\"header__note_icon\":\"Header_header__note_icon__3MH3e\",\"header__search_icon\":\"Header_header__search_icon__3Qs0j\",\"header__listWrapper\":\"Header_header__listWrapper__1UyDP\",\"header__user_block\":\"Header_header__user_block__2GU5e\",\"header__user_logout\":\"Header_header__user_logout__1Yx6S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader__wrapper\":\"Loader_loader__wrapper__13aXQ\",\"loader__animation_block\":\"Loader_loader__animation_block__1aF0f\",\"loader__block_one\":\"Loader_loader__block_one__1t_Hd\",\"loader__block_two\":\"Loader_loader__block_two__2wJ1Y\",\"loader__block_three\":\"Loader_loader__block_three__3ijRy\",\"loader__block_four\":\"Loader_loader__block_four__2cfvw\",\"loader__block_five\":\"Loader_loader__block_five__3MmfW\",\"jump_one\":\"Loader_jump_one__1NoRQ\",\"jump_two\":\"Loader_jump_two__Xq-3l\",\"jump_three\":\"Loader_jump_three__3Qiie\",\"jump_four\":\"Loader_jump_four__2EYR0\",\"jump_five\":\"Loader_jump_five__3ijBK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"WaitGhost_main__ZR6jC\",\"ghost__body\":\"WaitGhost_ghost__body__3f5VD\",\"ghostFly\":\"WaitGhost_ghostFly__2sJB_\",\"ghost__face\":\"WaitGhost_ghost__face__CeT8L\",\"ghost__eyes\":\"WaitGhost_ghost__eyes__2BMMn\",\"ghost_mouth\":\"WaitGhost_ghost_mouth__2C9Ml\",\"ghost__hands\":\"WaitGhost_ghost__hands__1iZQP\",\"ghostFlyHands\":\"WaitGhost_ghostFlyHands__2DN7X\",\"ghost_feet\":\"WaitGhost_ghost_feet__2vQFy\",\"text\":\"WaitGhost_text__1qcsl\",\"ghostFlyText\":\"WaitGhost_ghostFlyText__ZEhzZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"find__page_root\":\"MusicFindPage_find__page_root__2QMrC\",\"find__page_list\":\"MusicFindPage_find__page_list__orn1m\",\"find__albums_wrapper\":\"MusicFindPage_find__albums_wrapper__24NOB\",\"find__artists_wrapper\":\"MusicFindPage_find__artists_wrapper__1FZ_i\",\"find__tracks_wrapper\":\"MusicFindPage_find__tracks_wrapper__2SCMy\",\"find__page_albums\":\"MusicFindPage_find__page_albums__EeVpa\",\"find__page_artists\":\"MusicFindPage_find__page_artists__2dXuA\",\"find__page_tracks\":\"MusicFindPage_find__page_tracks__2NdZU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification__root\":\"Notification_notification__root__2eQyG\",\"notification__count\":\"Notification_notification__count__3qNcC\",\"notification__info_wrapper\":\"Notification_notification__info_wrapper__ZmKYf\",\"notification__info_text\":\"Notification_notification__info_text__1K49U\",\"notification__close\":\"Notification_notification__close__15Ovg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home__page_root\":\"HomePage_home__page_root__2Lphn\",\"home__page_main\":\"HomePage_home__page_main__1qFuo\",\"home__page_text\":\"HomePage_home__page_text__30UqD\",\"home__button_news\":\"HomePage_home__button_news__1wQkM\",\"home__animation_block\":\"HomePage_home__animation_block__36Cze\",\"home__genres_block\":\"HomePage_home__genres_block__17Hux\",\"home__page_slider\":\"HomePage_home__page_slider__26B2Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"artist__page_root\":\"ArtistPage_artist__page_root__2w9pm\",\"artist__like_icon\":\"ArtistPage_artist__like_icon__1nnWo\",\"artists__total_likes\":\"ArtistPage_artists__total_likes__1EZiC\",\"genre\":\"ArtistPage_genre__1riL3\",\"artist__main_icon\":\"ArtistPage_artist__main_icon__1v1Fr\",\"artists__genres_list\":\"ArtistPage_artists__genres_list__34b6n\",\"albums__next_button\":\"ArtistPage_albums__next_button__1vC_h\",\"ref\":\"ArtistPage_ref__1kvj3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader__root\":\"LoaderTwo_loader__root__2Lb0O\",\"note\":\"LoaderTwo_note__pwo34\",\"loader__block_one\":\"LoaderTwo_loader__block_one__3sg3Y\",\"colorOne\":\"LoaderTwo_colorOne__2kswz\",\"loader__block_two\":\"LoaderTwo_loader__block_two__3r0ag\",\"colorTwo\":\"LoaderTwo_colorTwo__3qnFC\",\"loader__block_three\":\"LoaderTwo_loader__block_three__Fh5yx\",\"colorThree\":\"LoaderTwo_colorThree__1aXCd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login__page_root\":\"LoginPage_login__page_root__3gp2C\",\"login_page_error\":\"LoginPage_login_page_error__3Cn-q\",\"registration__link\":\"LoginPage_registration__link__3vMeI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersPage__wrapper\":\"UsersPage_usersPage__wrapper__qUnHg\",\"users__page_grid\":\"UsersPage_users__page_grid__30zPa\",\"users__card_wrapper\":\"UsersPage_users__card_wrapper__1-H--\",\"users__page_text\":\"UsersPage_users__page_text__2YBPR\",\"loading\":\"UsersPage_loading__1b4DJ\",\"mainPage__wrapper\":\"UsersPage_mainPage__wrapper__1oFuM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userCard__wrapper\":\"UserCard_userCard__wrapper__3e3BI\",\"user__card_icon\":\"UserCard_user__card_icon__2tNvA\",\"user__card_name\":\"UserCard_user__card_name__3lTm5\",\"user__card_status\":\"UserCard_user__card_status__3vf_w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Slider_main__1Z5J-\",\"slider__img_wrapper\":\"Slider_slider__img_wrapper__1jQQT\",\"button\":\"Slider_button__uRJXH\",\"prev__button\":\"Slider_prev__button__1V3Zg\",\"next__button\":\"Slider_next__button__1pfWr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersPage__wrapper\":\"FriendsPage_usersPage__wrapper__xTGdm\",\"users__page_grid\":\"FriendsPage_users__page_grid__2u9Lq\",\"users__card_wrapper\":\"FriendsPage_users__card_wrapper__1kL4o\",\"users__page_text\":\"FriendsPage_users__page_text__lsbTu\",\"loading\":\"FriendsPage_loading__1hGgz\",\"mainPage__wrapper\":\"FriendsPage_mainPage__wrapper__22PtE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"music__track_root\":\"MusicTrack_music__track_root__1Bq-l\",\"music__track_active\":\"MusicTrack_music__track_active__1UlFo\",\"music__track_handle\":\"MusicTrack_music__track_handle__3iCiv\",\"music__track_name\":\"MusicTrack_music__track_name__GIRk9\"};"],"sourceRoot":""}